                      ;Moniteur MONSILIC Version 2.8
                      ;Créé par Abderrahim SAHLI Mars 2015
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version d'origine MONSILIC:
                      ;controle de find de table des commandes par un "0" final au lieu du contrôle par le
                      ; nombre de commande qui permet plus de souplesse de l'ajout de nouvelles comandes
                      ;optimisation des routines d'entrées de nombre hexadécimaux par le remplacement de 4
                      ; routines avec presque même code qui se répète par une seule routine qui appelle 4
                      ; routines optimisées
                      ;ajout routine de récpetion des données du port série, mais pas insérée dans tables
                      ; commandes
                      ;ajout de tables de conversion pour le nouveau assembleur ASSMSILIC à développer
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version MONSILICV2:
                      ;remplacement des routines S_TXD et S_RXD par de nouvelles routines entierement
                      ; récrites respectivement par SENDACIA et RECVACIA pour ne plus faire référence dans
                      ; la prochaine version à aucune routine de l'ancien moniteur E6809
                      ;ajout de routines de gestion d'afficheur LCD:
                      ; INITLCD qui initialise l'afficheur LCD
                      ; SENDLCD envoi de caractère à l'afficheur LCD
                      ; insertion routine d'affichage LCD dans la routine d'affichage OUT1CHAR et OUT2CHAR
                      ;ajout adresse de base du PTM 6840 installé récemment dans le kit
                      ;ajout nouvelles entrées à la table de conversion du nouveau assembleur ASSMSILIC
                      ;ajout routine copie EEPROM "COPYEEPR" mais pas encore vérifiée
                      ;ajout entrée commande assembleur ASSEMBLE dans table de commande
                      ;ajout de squelette de la routine ASSEMBLE qui sera le point d'entrée de l'assembleur
                      ; ASSESILIC
                      ;optimisation du code des routine et suppression des instructions superflues:
                      ; dans la routine CNVHXBCD: amélioration remise à 0 des variables temporaires
                      ;mini editeur LCD pour ajustement affichage hors écran (adresse > 16 et ligne > 2)
                      ;  pour afficheur 2 x 16 caractères
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version MONSILICV2.2:
                      ;gestion du mode d'adressage indéxé nul (complété par les post bytes)
                      ;petit nettoyage du code et changement des emplacement de quelques messages
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version MONSILICV2.3:
                      ;gestion du mode d'adressage indéxé deplacement Accumulateur (complété par les post bytes)
                      ;petit nettoyage du code et changement des emplacement de quelques messages
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version MONSILICV2.4:
                      ;routine et table d'assemblage des instructions de branchement "régulières"
                      ;petites organisation du code dans la routine de conversion (assemblage) pour séparer
                      ;les différentes portions du code de décodage des instructions
                      ;déboggage et modification routine RECEIVRS
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version MONSILICV2.5:
                      ;remplacement des adressages des variables temporaires et de sauvegarde par adr. direct
                      ;correction des bugs de copie de mémoire en mémoire COPYMEMR
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version MONSILICV2.6:
                      ;ajout routine génération horloge PTM pour ACIA (2400 bauds) et son lancement avant
                      ;  l'initialisation de l'ACIA
                      ;modification routine de gestion LCD "LCDEDIT" pour gérer l'afficheur LCD 4 L x 20 C
                      ;modification du pricipe de gestion de l'éditeur LCD par manipulation des lignes et
                      ;  colonnes
                      ;modification des adresse des variables
                      ;  ajout de variable de sauvegarde des registres, variables date et heures et autres
                      ;  variables temporaires, variable adresse ligne et colonne LCD
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version MONSILICV2.7:
                      ;finalisation routine de gestion LCD "LCDEDIT" pour gérer l'afficheur LCD 4 L x 20 C
                      ;ajout routine BULDBYTE (construction d'un octet à partir de 2 caractères héxadécimaux
                      ;optimisation des routines BULDDATA et BULDADDR par l'appel de BULDBYTE
                      ;ajout routine INPTADDR (Prompt pour entrée adresse) pour optimiser les routines 
                      ;  VIEWMEMR, MDFYMEMR, COPYMEMR, COPYEEPR et LOADPROG
                      ;ajout routine INPTDATA (Prompt pour entrée adresse) pour optimiser les routines 
                      ;  VIEWMEMR, MDFYMEMR, COPYMEMR, COPYEEPR et LOADPROG
                      ;ajout routine CNVBCDHX pour conversion nombre BCD <= 256 en nombre Hexadécimal 1 octet
                      ;remplacement noms routines et leurs appels OUTHEXAD par OUTHEXAW et OUTHEXAW par OUTHEXAB
                      ;optimisation routine OUTHEXAD par appel de la routine OUTHEXAB
                      ;réorganisation ordre des routines pour plus de structuration
                      ;réactivation routine READADC lecture entrée analogiques
                      ;ajout entrée pour READADC dans table commandes
                      ;ajout routines OUTDOLAR, OUTDASH et OUTDBPNT pour simplifier affichage des résultats
                      ;annulation constante chaine DOLLARSG et remplacement de ses appels de OUTSTRNG par OUTDOLAR
                      ;amélioration affichage des routines COPYMEMR et MDFYMEMR avec nouvelles routines
                      ;petite optimisation de OUTSTRNG (remplacement sequénce LDA ,X et LEAX 1,X par LDA ,X+
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version MONSILICV2.8:
                      ;ajout routines INITKEYB pour initialisatin du CR du PIA pour activation interruption
                      ;  et pour initialisation des variables nécessaires à la gestion clavier PS/2
                      ;  et INPTKEYB pour gestion de récepton octet du clavier PS/2
                      ;  cette routine INPTKEYB est appelée par l'interruption FIRQ du clavier
                      ;ajout appel initialisation clavier dans le programme pricipale MONSILIC
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version MONSILICV2.9:
                      ;ajout routines COMPDATA pour comparer le contenu de 2 zones mémoires
                      ;modification routine ASSEMBLE pour la rendre continue (sasie des mnémoniques et
                      ;  instructions une après l'autre en assemblant chaque instruction à la volée et en
                      ;  transférant le code opération assemblé vers une zone mémoire dédiée au programmes
                      ;  assemblés
                      ;modification de la routine LOADPROG en la renommant PROGLOAD et en renommant sa
                      ;  commande d'appel par "P" et en remplaçant le caractère de terminaison de saisie
                      ;  par $0D au lieu de $0D+$0A
                      ;ajout de l'affichage du message de bienvenue et d'aide dans la routine d'initialisation
                      ;ajout de l'entrée commande d'éffacement de l'afficheur LCD dans la table commandes
                      ;annulation affichage message erreur caractère non hexadécimal dans routine SENDACIA
                      ;-----------------------------------------------------------------------------------
                      ;Principaux changemenets et corrections par rapport à la version MONSILICV2.9.2:
                      ;modification de la routine ASSEMBLE en remplaçant le caractère de terminaison de
                      ;  saisie par $0D au lieu de $0D+$0A
                      ;modification de la routine INPTCMND en remplaçant le caractère de terminaison de
                      ;  saisie par $0D au lieu de $0D+$0A
                      ;ajout routine d'affichage de l'aide sur les commandes HELPCMND
                      ;ajout de l'affichage de l'adresse physique des routines correspondantes à chaque commande
                      ;remplacement de la référence à l'adresse fixe du PTM par référence EQU ("PTM")
                      ;utlisation d'une pile propre au moniteur
                      ;-----------------------------------------------------------------------------------
                      
                      
                      ;************************************************************************************
                      ;Global Equates
                      ;************************************************************************************
F800                  GWAIT   EQU     $F800   ;Routine temporisation
F406                  DIS_MEM EQU     $F406   ;routine affichage adresse et données sur 7 segments
                      
0000                  SRAMSTRT        EQU     $0000   ;adresse début RAM (contient variables, piles, MONSILIC)
0FFF                  SRAMEND EQU     $0FFF   ;adresse fin RAM (contient variables, piles, MONSILIC)
                      
8000                  EEPROMSTR       EQU     $8000   ;adresse début EEPROM (contiendra données à enregistrer)
BFFF                  EEPROMEND       EQU     $BFFF   ;adresse fin EEPROM (contiendra données à enregistrer)
                      
F000                  EPROMSTRT       EQU     $F000   ;adresse début EPROM (contiendra données à enregistrer)
FFFF                  EPROMEND        EQU     $FFFF   ;adresse fin EPROM (contient routines ancien moniteur)
                      
1000                  ACIA    EQU     $1000   ;adresse de base de l'ACIA (port série 6850)
1000                  ACIASR  EQU     $1000   ;adresse Status Register de l'ACIA (port série 6850)
1000                  ACIACR  EQU     $1000   ;adresse Control Register de l'ACIA (port série 6850)
1001                  ACIATDR EQU     $1001   ;adresse Transmit Data Register de l'ACIA (port série 6850)
1001                  ACIARDR EQU     $1001   ;adresse Receive Data Register de l'ACIA (port série 6850)
                      
                      ;PIA base adress
1400                  PIA     EQU     $1400   ;adresse de base du PIA (port parrallèle 6821)
                      ;port A registers adresses
1400                  PIADDRA EQU     PIA     ;adresse port direction A
1400                  PIAINA  EQU     PIA     ;adresse port entrée A
1400                  PIAOUTA EQU     PIA     ;adresse port sortie A
1401                  PIACRA  EQU     PIA+1   ;adresse Control Register A
1401                  PIASRA  EQU     PIA+1   ;adresse Status Register A
                      ;port A registers adresses
1400                  PIADDRB EQU     PIA     ;adresse port direction B
1402                  PIAINB  EQU     PIA+2   ;adresse port entrée B
1402                  PIAOUTB EQU     PIA+2   ;adresse port sortie B
1403                  PIACRB  EQU     PIA+3   ;adresse Control Register B
1403                  PIASRB  EQU     PIA+3   ;adresse Status Register A
                      
4000                  PTM     EQU     $4000   ;adresse de base du PTM (Programmable Timer Module 6840
                      
2000                  LCDCD   EQU     $2000   ;LCD Registre de commande
2001                  LCDDT   EQU     $2001   ;LCD Registre de données
                      
00F4                  GESTFIRQ        EQU     $00F4   ;gestionnaire FIRQ
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Variables and constants
                      ;************************************************************************************
                      ;Variables pour caractères
0180                  TEMPCHAR        EQU     $0180   ;variable temporaire de type Char (pour un caractère)
0181                  TEMP2CHR        EQU     $0181   ;variable temporaire de type Word (pour 2 caractères)
0183                  TEMPADDR        EQU     $0183   ;variable temporaire de type word (pour les adresses)   
0185                  TEMPHEX1        EQU     $0185   ;variable temporaire de type Byte (pour code car. Hexa)
0186                  TEMPHEX2        EQU     $0186   ;variable temporaire de type Byte (pour code car. Hexa)
0187                  TEMPHEX3        EQU     $0187   ;variable temporaire de type Byte (pour code car. Hexa)
0188                  TEMPHEX4        EQU     $0188   ;variable temporaire de type Byte (pour code car. Hexa)
0189                  PRMPTCHR        EQU     $0189   ;variable globale de type Char (contient caractère Prompt)
                      ;variables pour registres
018A                  SAVSSTCK        EQU     $018A   ;variable globale pour sauvegarde du Stack système
018C                  SAVUSTCK        EQU     $018C   ;variable globale pour sauvegarde du Stack utilisateur
018E                  SAVXINDX        EQU     $018E   ;variable globale pour sauvegarde de l'index X
018E                  SAVYINDX        EQU     $018E   ;variable globale pour sauvegarde de l'index Y
0190                  SAVAACCU        EQU     $0190   ;variable globale pour sauvegarde de l'accumulateur A
0191                  SAVBACCU        EQU     $0191   ;variable globale pour sauvegarde de l'accumulateur B
0192                  SAVDPREG        EQU     $0192   ;variable globale pour sauvegarde du registre DP
0193                  SAVCCREG        EQU     $0193   ;variable globale pour sauvegarde du registre CC
0194                  SAVPCREG        EQU     $0194   ;variable globale pour sauvegarde du registre PC
                      
                      ;variables pour octets et mots quelconque
0196                  TEMPBYTE        EQU     $0196   ;variable temporaire de type Byte (pour données quelconque)
0197                  TEMPWORD        EQU     $0197   ;variable temporaire de type Byte (pour données quelconque)
                      
                      ;variables pour date et heure compacts
0199                  BCENTSEC        EQU     $0199   ;variable de sauvegarde temporaire centièmes seconde (octet)
01A0                  BSECONDE        EQU     $01A0   ;variable de sauvegarde temporaire des secondes (octet)
01A1                  BMINUTES        EQU     $01A1   ;variable de sauvegarde temporaire des minutes (octet)
01A2                  BHOURES EQU     $01A2   ;variable de sauvegarde temporaire des minutes (octet)
01A3                  BDAYS   EQU     $01A3   ;variable de sauvegarde temporaire des jours (octet)
01A4                  BMONTHS EQU     $01A4   ;variable de sauvegarde temporaire des mois (octet)
01A5                  BYEAR   EQU     $01A5   ;variable de sauvegarde temporaire des minutes (octet)
                      ;variables pour date et heure sous forme de caractères
01A7                  CCENTSEC        EQU     $01A7   ;;variable de sauvegarde temporaire centièmes seconde (car.)
01B0                  CSECONDE        EQU     $01B0   ;variable de sauvegarde temporaire des secondes (caractères)
01B2                  CMINUTES        EQU     $01B2   ;variable de sauvegarde temporaire des minutes (caractères)
01B4                  CHOURES EQU     $01B4   ;variable de sauvegarde temporaire des minutes (caractères)
01B6                  CDAYS   EQU     $01B6   ;variable de sauvegarde temporaire des jours (caractères)
01B8                  CMONTHS EQU     $01B8   ;variable de sauvegarde temporaire des mois (caractères)
01C0                  CYEAR   EQU     $01C0   ;variable de sauvegarde temporaire des minutes (caractères)
                      
                      ;variables pour écran LCD
01C4                  LINADRSS        EQU     $01C4   ;variable globale pour adresse Ligne de l'écran LCD
01C5                  CLNADRSS        EQU     $01C5   ;variable globale pour adresse Colonne de l'écran LCD
                      
                      ;variables pour clavier PS/2
01C6                  KEYBCNTR        EQU     $01C6   ;variable globale compteur bits du clavier PS/2
01C7                  SCANCODE        EQU     $01C7   ;variable globale qui contiendra le ScanCode reçu du clavier
01C8                  PNTBUFKB        EQU     $01C8   ;variable globale qui contiendra le pointeur courant du buffer clavier
                      ;STRTRCVD       EQU     $01C7   ;variable globale indicat. état bit start: reçu $FF ou non 0
                      
                      ;buffer pour clavier PS/2 
01CC                  BUFFERKB        EQU     $01CC   ;zone buffer clavier    
0014                  BUFFKBSZ        EQU     $14     ;taille buffer clavier 20 scancodes ou aractère suivant traitement     
                      
                      ;buffer pour chaine de caractères
01E0                  BUFFERST        EQU     $01E0   ;variable temporaire String (pour chaines de caractères)
                      
                      ;caractère Espace
0020                  SPACECHR        EQU     $20     ;code du caractère espace
                      ;____________________________________________________________________________________
                      
0200                          ORG     $0200   ;point d'entrée
                              
                      ;************************************************************************************
                      ;Initialisation variables et ACIA
                      ;************************************************************************************
0200                  MONSILIC        
                              ;n'est pas obligatoire pour point d'entrée du programme principal
                              ;PSHS   A       ;sauvegarder regsitre utilisé A
                              
0200  10CE003F                LDS     #$003F
0204  8601                    LDA     #$01
0206  1F8B                    TFR     A,DP
                              
0208  863E                    LDA     #$3E    ;code hexadécimal du caractère ">"
020A  9789                    STA     <PRMPTCHR       ;initialiser varaiable dédiée par caractère Prompt ">"
                              
020C  1700D5                  LBSR    PTMSBAUD        ;initialisation et génération onde rectangulaire 2400 bauds
                              
020F  1700EC                  LBSR    INITACIA        ;initialisation ACIA
                              
0212  170181                  LBSR    INITLCD ;initialisation afficheur LCD
                              
0215  170150                  LBSR    INITKEYB        ;appel routine d'initialisation du clavier PS/2
                              
0218  8E02AC                  LDX     #WELCOMEM       ;message  bienvenue
021B  17066A                  LBSR    OUTSTRNG        ;son affichage
                              
021E  170637                  LBSR    OUTCRLF ;retour nouvelle ligne
                              
0221  170747                  LBSR    INPTCMND        ;vers point d'entrée du Moniteur: interpreteur commandes
                              
                              ;n'est pas obligatoire pour point d'entrée du programme principal
                              ;PULS   A       ;sauvegarder regsitre utilisé A
                      
0224  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Command Table
                      ;************************************************************************************
0225  48              CMNDTABL        FCC     "H"
0226  051B                    FDB     HELPCMND        ;adresse HELPCMND
                      
0228  53                      FCC     "S"
0229  0396                    FDB     INITLCD ;adresse INITLCD
                      
022B  50                      FCC     "P"
022C  0B8C                    FDB     PROGLOAD        ;adresse PROGLOAD 
                      
022E  45                      FCC     "E"
022F  0BCD                    FDB     EXECPROG        ;adresse EXECPROG
                      
0231  56                      FCC     "V"
0232  09BF                    FDB     VIEWMEMR        ;adresse VIEWMEMR
                      
0234  4D                      FCC     "M"
0235  09FB                    FDB     MDFYMEMR        ;adresse MDFYMEMR
                      
0237  43                      FCC     "C"
0238  0A41                    FDB     COPYMEMR        ;adresse COPYMEMR
                              
023A  4F                      FCC     "O"
023B  0AB9                    FDB     COMPMEMR        ;adresse COMPMEMR
                              
023D  46                      FCC     "F"
023E  0B3A                    FDB     COPYEEPR        ;adresse copie EEPROM
                              
0240  41                      FCC     "A"
0241  0BDF                    FDB     ASSEMBLE        ;adresse ASSEMBLE
                              
0243  52                      FCC     "R"
0244  06A5                    FDB     RECEIVRS        ;adresse RECEIVRS
                              
0246  42                      FCC     "B"
0247  06E0                    FDB     BOOTLOAD        ;adresse BOOTLOAD Bootloader
                              
0249  49                      FCC     "I"
024A  1277                    FDB     READADC ;adresse READADC lecture entrée analogiques
                              
024C  00                      FCB     $00     ;fin table
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Constants
                      ;************************************************************************************
024D  416472204465622E3A2000 STRTADDR        FCC     "Adr Deb.: ", $00
0258  4164722046696E3A2000 ENDADDR FCC     "Adr Fin: ", $00
                      
0262  41647220537263653A2000 SRCEADDR        FCC     "Adr Srce: ", $00
026D  4164722043626C653A2000 TRGTADDR        FCC     "Adr Cble: ", $00
0278  4E6272206F63742F6772703A2000 NBRBYTES        FCC     "Nbr oct/grp: ", $00
0286  4E62722047726F757065733A2000 NBREGRPS        FCC     "Nbr Groupes: ", $00 
                      
0294  416472205072672E3A2000 ADDRMESS        FCC     "Adr Prg.: ", $00
                      
029F  456E747220646F6E6E653A2000 MESSDATA        FCC     "Entr donne: ", $00
02AC  53494C49434F4E414C204D6F6E69746F722C204162646572726168696D205341484C49203230313500 WELCOMEM        FCC     "SILICONAL Monitor, Abderrahim SAHLI 2015", $00
                      ;____________________________________________________________________________________
                      
                              
                      ;************************************************************************************
                      ;Routine WAIT10MS Wait 10 milliseconds
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: Aucune
                      ;************************************************************************************
02D5  3410            WAIT10MS        PSHS    X       ;sauvegarder registre utilisé
                              
02D7  8E0000                  LDX     #$0000  ;initialisation compteur
02DA  3001            LOOP    LEAX    1,x     ;incrémentation compteur
02DC  8C02C8                  CMPX    #$02C8  ;comparer compteur au nombre correspondant à 10ms
02DF  26F9                    BNE     LOOP    ;si pas encore atteint reboucler
                              
02E1  3510                    PULS    X       ;restaurer registre utilisé
                              
02E3  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine PTMSBAUD Generation of rectangular wave for ACIA clock (BAUD 2400)
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: Aucune
                      ;************************************************************************************
02E4  3412            PTMSBAUD        PSHS    A,X     ;sauvegarder regsitres utilisés
                              
02E6  8E000C                  LDX     #$000C  ;valeur de comptage
                              ;STX    $4006   ;T-TM3
02E9  BF4006                  STX     PTM+6   ;T-TM3
                              
02EC  8692                    LDA     #$92    ;programation
                              ;STA    $4000
02EE  B74000                  STA     PTM
                              
02F1  8601                    LDA     #$01    ;adresse
                              ;STA    $4001   ;T-C2, registre de contrôle
02F3  B74001                  STA     PTM+1   ;T-C2, registre de contrôle
                              
02F6  8600                    LDA     #$00
                              ;STA    $4000   ;T-C13, activation des horloges
02F8  B74000                  STA     PTM     ;T-C13, activation des horloges
                              
02FB  3512                    PULS    A,X     ;restaurer registres utilisés
                               
02FD  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine INITACIA Initialize ACIA for communication via serial port
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: Aucune
                      ;************************************************************************************
02FE  3402            INITACIA        PSHS    A       ;sauvegarder regsitre utilisé A
                              
0300  8603                    LDA     #$03    ;master reset
0302  B71000                  STA     ACIACR  ;envoi au Control Register  
0305  8655                    LDA     #$55    ;code binaire de configuration: 01010101
0307  B71000                  STA     ACIACR  ;envoi au Control Register
                              
030A  3502                    PULS    A       ;restaurer registre utilisé A
                               
030C  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine INITKEYB Initialize PS/2 Keyboard, PIA CR and variables for keyboard
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: Aucune
                      ;************************************************************************************
030D  15              KEYBTABL        FCC     $15
030E  41                      FCC     "A"
                              
030F  1D                      FCC     $1D
0310  5A                      FCC     "Z"
                              
0311  24                      FCC     $24
0312  45                      FCC     "E"
                              
0313  2D                      FCC     $2D
0314  52                      FCC     "R"
                              
0315  2C                      FCC     $2C
0316  54                      FCC     "T"
                              
0317  35                      FCC     $35
0318  59                      FCC     "Y"
                              
0319  3C                      FCC     $3C
031A  55                      FCC     "U"
                              
031B  43                      FCC     $43
031C  49                      FCC     "I"
                              
031D  44                      FCC     $44
031E  4F                      FCC     "O"
                              
031F  4D                      FCC     $4D
0320  50                      FCC     "P"
                                      
0321  1C                      FCC     $1C
0322  51                      FCC     "Q"
                              
0323  1B                      FCC     $1B
0324  53                      FCC     "S"
                              
0325  23                      FCC     $23
0326  44                      FCC     "D"
                              
0327  2B                      FCC     $2B
0328  46                      FCC     "F"
                              
0329  34                      FCC     $34
032A  47                      FCC     "G"
                              
032B  33                      FCC     $33
032C  48                      FCC     "H"
                              
032D  3B                      FCC     $3B
032E  4A                      FCC     "J"
                              
032F  42                      FCC     $42
0330  4B                      FCC     "K"
                              
0331  4B                      FCC     $4B
0332  4C                      FCC     "L"
                              
0333  4C                      FCC     $4C
0334  4D                      FCC     "M"
                              
0335  1A                      FCC     $1A
0336  57                      FCC     "W"
                              
0337  22                      FCC     $22
0338  58                      FCC     "X"
                              
0339  21                      FCC     $21
033A  43                      FCC     "C"
                              
033B  2A                      FCC     $2A
033C  56                      FCC     "V"
                              
033D  32                      FCC     $32
033E  42                      FCC     "B"
                              
033F  31                      FCC     $31
0340  4E                      FCC     "N"
                              
0341  41                      FCC     $41
0342  2C                      FCC     ","
                              
0343  29                      FCC     $29
0344  20                      FCC     " "
                              
0345  70                      FCC     $70
0346  30                      FCC     "0"
                              
0347  69                      FCC     $69
0348  31                      FCC     "1"
                              
0349  72                      FCC     $72
034A  32                      FCC     "2"
                              
034B  7A                      FCC     $7A
034C  33                      FCC     "3"
                              
034D  6B                      FCC     $6B
034E  34                      FCC     "4"
                              
034F  73                      FCC     $73
0350  35                      FCC     "5"
                              
0351  74                      FCC     $74
0352  36                      FCC     "6"
                              
0353  6C                      FCC     $6C
0354  37                      FCC     "7"
                              
0355  75                      FCC     $75
0356  38                      FCC     "8"
                              
0357  7D                      FCC     $7D
0358  39                      FCC     "9"
                              
0359  25                      FCC     $25
035A  23                      FCC     "#"
                              
035B  5B                      FCC     $5B
035C  24                      FCC     "$"
                              
035D  79                      FCC     $79
035E  2B                      FCC     "+"
                              
035F  7B                      FCC     $7B
0360  2D                      FCC     "-"
                              
0361  5A                      FCC     $5A
0362  0D                      FCC     $0D
                              
0363  14                      FCC     $14
0364  0A                      FCC     $0A
                              
0365  76                      FCC     $76
0366  1B                      FCC     $1B
                              
0367  00                      FCC     $00
                              
0368  3432            INITKEYB        PSHS    A,X,Y   ;sauvegarder regsitre utilisé A
                              
036A  8605                    LDA     #%00000101;bit 0: IRQ validée, bit1: CB  active sur front descendant
                                              ;bit2: registre OUT adressé, bit3: interrupt. non validée
                                              ;bit5: CB2 en entrée
036C  B71403                  STA     PIACRB  ;programmation PIA pour niterrupt. CB1
                      
036F  860B                    LDA     #$0B    ;initial. compteur de bits à 11, pour recevoir start + 8 bits
0371  97C6                    STA     <KEYBCNTR       ;sauvegarder compteur bits dans variable globale dédiée
                              
0373  0FC7                    CLR     <SCANCODE       ;initialiser à 0 du scancode qui contiendra code reçu clavier
                              
0375  8E01CC                  LDX     #BUFFERKB       ;X <- adresse du buffer clavier
0378  9FC8                    STX     <PNTBUFKB       ;X -> pointeur courant du buffer clavier
                              
                      ;début initialisation contenu buffer clavier à 0
037A  3410                    PSHS    X
                              
037C  8614                    LDA     #BUFFKBSZ       ;initialisation compteur octets buffer clavier
037E  6F80            INIBUFKB        CLR     ,X+     ;mise à 0 du contenu d'une case mémoire du buffer clavier
0380  4A                      DECA            ;décrementer compteur octets buffer clavier
0381  4D                      TSTA            ;tester compteur octets buffer clavier
0382  26FA                    BNE     INIBUFKB        ;si B <> 0, reboucler. sinon (buffer entier initialisé), continuer     
                              
0384  3510                    PULS    X
                      ;fin initialisation contenu buffer clavier à 0
                              
                              ;sinon (buffer initialisé en entier), initialisation adresse routine interruption
0386  108E00F4                LDY     #GESTFIRQ       ;programme gestionnaire FIRQ
038A  867E                    LDA     #$7E    ;insruction JMP
038C  A7A4                    STA     ,Y
038E  8E0771                  LDX     #INPTKEYB       ;adresse routine gestion interupption clavier (via CB1 du PIA)
0391  AF21                    STX     1,Y
                              
                      ;début annulée pour test      
                              ;ANDCC  #%10111111      ;activation FIRQ pour valider les demandes d'interruption
                      ;fin annulée pour test 
                              
0393  3532                    PULS    A,X,Y   ;restaurer registre utilisé A
                               
0395  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine INITLCD Initialize LCD Display (Cursor home and clear screen)
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: Aucune
                      ;************************************************************************************
0396  3402            INITLCD PSHS    A       ;sauvegarder regsitre utilisé A
                              
0398  8638                    LDA     #$38    ;
039A  B72000                  STA     LCDCD   ;envoi au Controle Register du LCD
                              
039D  17FF35                  LBSR    WAIT10MS        ;give time to LCD to run command
                              
03A0  860F                    LDA     #$0F    ;
03A2  B72000                  STA     LCDCD   ;envoi au Controle Register du LCD
                              
03A5  17FF2D                  LBSR    WAIT10MS        ;give time to LCD to run command
                              
03A8  8606                    LDA     #$06    ;
03AA  B72000                  STA     LCDCD   ;envoi au Controle Register du LCD
                              
03AD  17FF25                  LBSR    WAIT10MS        ;give time to LCD to run command
                              
03B0  8601                    LDA     #$01    ;cursor home and clear screen command
03B2  B72000                  STA     LCDCD   ;envoi au Controle Register du LCD
                              
03B5  17FF1D                  LBSR    WAIT10MS        ;give time to LCD to run command
                              
03B8  0FC4                    CLR     <LINADRSS       ;initialisation variable temporaire Ligne
03BA  0FC5                    CLR     <CLNADRSS       ;initialisation variable temporaire Colonne
                              
03BC  3502                    PULS    A       ;restaurer registre utilisé A
                               
03BE  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine LCDEDIT Management of LCD display
                      ;Entrée: A: Caractère à afficher, 
                      ;        LINADRSS: valeur sauvegardée de l'adresse de ligne actuelle LCD ($00 à $19)
                      ;        CLNADRSS: valeur sauvegardée de l'adresse de colonne actuelle LCD ($00 à $03)        
                      ;Sorties: Aucune
                      ;Routines appelée: Aucune
                      ;************************************************************************************
0004                  LASTLINE        EQU     $04     ;numéro d'après dernière ligne
0014                  LASTCLMN        EQU     $14     ;numéro d'après dernière colonne
                              
0000                  ORGLINE1        EQU     $00     ;adresse DDRAM origine line 1
0040                  ORGLINE2        EQU     $40     ;adresse DDRAM origine line 2
0014                  ORGLINE3        EQU     $14     ;adresse DDRAM origine line 3
0054                  ORGLINE4        EQU     $54     ;adresse DDRAM origine line 4   
                      
                      ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
03BF  3404            LCDEDIT PSHS    B       ;sauvegarder registre utilisé
                              
03C1  0F96                    CLR     <TEMPBYTE       ;initalisation à 0 variable booléene nouvelle ligne
                              
                      ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>   
                      ;début test retour ligne envoyé       
03C3  810D                    CMPA    #$0D    ;comparer caractère à afficher avec "Chariot Return"
03C5  2602                    BNE     TSTENDLN        ;si non égal, aller gérer le changement de ligne normal
                              
03C7  2006                    BRA     GONEWLIN        ;si "Line Feed" aller traiter retour nouvelle ligne
                              
03C9  D6C5            TSTENDLN        LDB     <CLNADRSS       ;A <- compteur Colonne
03CB  C114                    CMPB    #LASTCLMN       ;comparer colonne actuelle avec après dernière colonne
03CD  2610                    BNE     TSTLIN1 ;si fin de ligne non encore atteint aller tester lignes
                      
                      ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  
03CF  0CC4            GONEWLIN        INC     <LINADRSS       ;si égal, incrémenter compteur de lignes
                              
03D1  D6C4                    LDB     <LINADRSS       ;et affecter A <- compteur ligne
03D3  C104                    CMPB    #LASTLINE       ;puis comparer ligne actuelle avec après dernière ligne
03D5  2602                    BNE     CLRCOLMN        ;si non égal après ligne, continuer (en mettant à 0 compteur colonnes)       
                              
03D7  0FC4                    CLR     <LINADRSS       ;si égal après ligne, revenir à la 1ère ligne puis
                      
03D9  0FC5            CLRCOLMN        CLR     <CLNADRSS       ;mettre à 0 le compteur de colonnes
                              
03DB  C601                    LDB     #$01    ;#$01 -> nouvelle ligne
03DD  D796                    STB     <TEMPBYTE       ;variable considérée logique 
                      ;fin test retour ligne envoyé
                      ;-------------------------------------------------------------------------------------
                      
                      ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      ;test numéro ligne active pour définir quel origine utiliser pour déterminer adres DDRAM
                              
                      ;test ligne 1 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
03DF  D6C4            TSTLIN1 LDB     <LINADRSS       ;B <- compteur ligne
03E1  C100                    CMPB    #$00    ;tester si ligne 1
03E3  260B                    BNE     TSTLIN2 ;si non, aller tester si ligne 2
                              
03E5  C600                    LDB     #ORGLINE1       ;B <- adresse DDRAM origine pour la ligne 1
03E7  DBC5                    ADDB    <CLNADRSS       ;ajouter origine au compteur de Colonnes
03E9  CA80                    ORB     #$80    ;ajuster adresse pour commande changement adresse DDRAM
03EB  F72000                  STB     LCDCD   ;et le mettre dans registre commande LCD pour valider changem.
                              
03EE  2035                    BRA     TSTNEWLN        ;aller vérifier si une nouvelle ligne
                      ;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
                              
                      ;test ligne 2 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
03F0  D6C4            TSTLIN2 LDB     <LINADRSS       ;B <- compteur ligne
03F2  C101                    CMPB    #$01    ;tester si ligne 2
03F4  260B                    BNE     TSTLIN3 ;si non, aller tester si ligne 3
                              
03F6  C640                    LDB     #ORGLINE2       ;B <- adresse DDRAM origine pour la ligne 1
03F8  DBC5                    ADDB    <CLNADRSS       ;ajouter origine au compteur de Colonnes
03FA  CA80                    ORB     #$80    ;ajuster adresse pour commande changement adresse DDRAM
03FC  F72000                  STB     LCDCD   ;et le mettre dans registre commande LCD pour valider changem.
                              
03FF  2024                    BRA     TSTNEWLN        ;aller vérifier si une nouvelle ligne
                      ;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
                      
                      ;test ligne 3 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
0401  D6C4            TSTLIN3 LDB     <LINADRSS       ;B <- compteur ligne
0403  C102                    CMPB    #$02    ;tester si ligne 3
0405  260B                    BNE     TSTLIN4 ;si non, aller tester si ligne 4
                              
0407  C614                    LDB     #ORGLINE3       ;B <- adresse DDRAM origine pour la ligne 1
0409  DBC5                    ADDB    <CLNADRSS       ;ajouter origine au compteur de Colonnes
040B  CA80                    ORB     #$80    ;ajuster adresse pour commande changement adresse DDRAM
040D  F72000                  STB     LCDCD   ;et le mettre dans registre commande LCD pour valider changem.
                              
0410  2013                    BRA     TSTNEWLN        ;aller vérifier si une nouvelle ligne
                      ;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
                      
                      ;test ligne 4 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
0412  D6C4            TSTLIN4 LDB     <LINADRSS       ;B <- compteur ligne
0414  C103                    CMPB    #$03    ;tester si ligne 4
0416  1026002A                LBNE    ERRDDRAM        ;si non, aller tester si ligne 20
                              
041A  C654                    LDB     #ORGLINE4       ;B <- adresse DDRAM origine pour la ligne 1
041C  DBC5                    ADDB    <CLNADRSS       ;ajouter origine au compteur de Colonnes
041E  CA80                    ORB     #$80    ;ajuster adresse pour commande changement adresse DDRAM
0420  F72000                  STB     LCDCD   ;et le mettre dans registre commande LCD pour valider changem.
                              
0423  2000                    BRA     TSTNEWLN        ;aller vérifier si une nouvelle ligne
                      ;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
                      
0425  0D96            TSTNEWLN        TST     <TEMPBYTE       ;tester si variable considérée booléene = 0
                              
0427  271D                    BEQ     AFLCDCAR        ;si 0 donc pas nouvelle ligne, aller afficher caractère
                                              ;si 1 donc nouvelle ligne, aller effacer la ligne
                                              
                      ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  
                      ;début effacement nouvelle ligne et remise du curseur en début de ligne
0429  3406            CLRNEWLN        PSHS    A,B     ;sauver registre A utilisé comme adresse DDRAM et B
                              
042B  C600                    LDB     #$00    ;initialistaion compteur adresse afficheur
                              
042D  8620            LOOPCLRC        LDA     #SPACECHR       ;Afficher caractère (Espace)
042F  B72001                  STA     LCDDT   ;sur LCD pour effacer sa position
                              
0432  17FEA0                  LBSR    WAIT10MS
                              
0435  5C                      INCB            ;incrémenter compteur adresse afficheur
0436  C114                    CMPB    #LASTCLMN       ;tester fin de ligne
0438  26F3                    BNE     LOOPCLRC        ;si non encore atteinte
                              
043A  3506                    PULS    A,B     ;restaurer registre A utilisé comme adresse DDRAM et B
                      
043C  17FE96                  LBSR    WAIT10MS
                              
043F  F72000                  STB     LCDCD   ;restaurer adresse DDRAM d'avant effacement
                      ;fin effacement nouvelle ligne et remise du curseur en début de ligne
                      
0442  2002                    BRA     AFLCDCAR        ;aller afficher le caractère sur l'afficher LCD        
                      ;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
                      
0444  2010            ERRDDRAM        BRA     EXITROUT
                      
                      ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
0446  810D            AFLCDCAR        CMPA    #$0D    ;tester caractère = "Chariot Return"
0448  270C                    BEQ     EXITROUT        ;si = "Line Feed", sortir
                              
044A  810A                    CMPA    #$0A    ;tester caractère = "Line Feed"
044C  2708                    BEQ     EXITROUT        ;si = "Line Feed", sortir
                              
044E  17FE84                  LBSR    WAIT10MS        ;si différent de "Line Feed"
                      
0451  B72001                  STA     LCDDT   ;Afficher donnée sur LCD
0454  0CC5                    INC     <CLNADRSS       ;Incrémenter compteur Colonne LCD
                      ;-------------------------------------------------------------------------------------
                              
0456  3504            EXITROUT        PULS    B       ;restaurer registre utilisé
                              
0458  39                      RTS
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine SENDACIA Send Byte via ACIA serial port
                      ;Entrée: A=Octet à envoyer au port série
                      ;Sorties: Aucune
                      ;Routines appelée: Aucune
                      ;************************************************************************************
0459  3404            SENDACIA        PSHS    B
                      
045B  F61000                  LDB     ACIASR  ;(S_SR) lit état du Serial Status Register
045E  C408                    ANDB    #$08    ;test CTS (#00001000b)
0460  26F7                    BNE     SENDACIA        ;reste en loop tant que CTS n'est pas actif
                              
0462  F61000          LOOPTDRE        LDB     ACIASR  ;(S_SR) lit état du Serial Status Register
0465  C402                    ANDB    #$02    ;test TDRE (#00000010b) (TxDataRegisterEmpty)
0467  27F9                    BEQ     LOOPTDRE        ;reste en loop tant que TDRE=0
                              
0469  B71001                  STA     ACIATDR ;(S_TDR) transfère donnée à TxDataRegister
                              
046C  17FF50                  LBSR    LCDEDIT ;appeler gestionaire editeur LCD pour ajuster adresse affichage
                              
046F  3504                    PULS    B
                              
0471  39                      RTS             ;Fin de sous routine et retour au programme appelant
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine RECVACIA Receive Byte from ACIA serial port
                      ;Entrée: Aucune
                      ;Sorties: A=Donnée reçue du port série
                      ;Routines appelée: Aucune
                      ;************************************************************************************
0472  3404            RECVACIA        PSHS    B       ;sauvegarder registre utilisé
                      
                      ;début annulé pour test entrée par clavier PS/2      
                              ;LDB    #$15    ;(#00010101b) /RTS (bit 6) = 0 : actif
                              ;STB    ACIACR  ;(S_CR) Serial Control Register
                      ;LOOPNDAT       LDB     ACIASR  ;(S_SR) Serial Status Register
                              ;ANDB   #$01    ;test RDRF RxDataRegisterFull (bit 6)
                              ;BEQ    LOOPNDAT        ;reste en loop tant qu'il n'y a pas de donnée
                              
                              ;LDB    #$55    ;(#01010101b) /RTS (bit 6) = 1 : non actif
                              ;STB    ACIACR  ;(S_CR) Serial Control Register
                              ;LDA    ACIARDR ;(S_RDR) Serial Receive Data Register
                      ;fin annulé pour test entrée par clavier PS/2 
                              
                      ;début test entrée par clavier PS/2
0474  3CBF                    CWAI    #%10111111
                              
0476  9680                    LDA     <TEMPCHAR
                              
                              ;ORCC   #%01000000      ;désactivation FIRQ pour éviter autre appel récursif avant fin routine
                      ;fin test entrée par clavier PS/2
                      
0478  3504                    PULS    B       ;restaurer registre utilisé
                              
047A  39                      RTS             ;Fin de sous routine et retour au programme appelant
                      ;____________________________________________________________________________________
                              
                      
                      ;************************************************************************************
                      ;Routine HELPCMND Display commands list
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: 
                      ;************************************************************************************
047B  533A20436C656172204C434400 HELPSCMD        FCC     "S: Clear LCD", $00
0488  503A2050726F67204C6F616400 HELPPCMD        FCC     "P: Prog Load", $00
0495  453A20457865632050726F6700 HELPECMD        FCC     "E: Exec Prog", $00
04A2  563A2056696577204D656D00 HELPVCMD        FCC     "V: View Mem", $00
04AE  4D3A204D6F64696679204D656D00 HELPMCMD        FCC     "M: Modify Mem", $00
04BC  433A20436F7079204D656D00 HELPCCMD        FCC     "C: Copy Mem", $00
04C8  4F3A20436F6D70617265204D656D00 HELPOCMD        FCC     "O: Compare Mem", $00
04D7  463A20436F707920454550524F4D00 HELPFCMD        FCC     "F: Copy EEPROM", $00
04E6  413A2041736D626C2050726F6700 HELPACMD        FCC     "A: Asmbl Prog", $00
04F4  523A2052656376204461746100 HELPRCMD        FCC     "R: Recv Data", $00
0501  423A20426F6F746C6F6164657200 HELPBCMD        FCC     "B: Bootloader", $00
050F  493A20526561642041444300 HELPICMD        FCC     "I: Read ADC", $00      
                      
051B  3410            HELPCMND        PSHS    X
                              
051D  8E047B                  LDX     #HELPSCMD       ;message d'aide sur les commandes
0520  170365                  LBSR    OUTSTRNG        ;son affichage  
0523  17034E                  LBSR    OUTDASH ;retour nouvelle ligne
0526  17031B                  LBSR    OUTPRMPT
                              
0529  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
                              
052C  3004                    LEAX    4,X
                              
052E  A680                    LDA     ,X+
0530  9781                    STA     <TEMP2CHR
                              
0532  A684                    LDA     ,X
0534  9782                    STA     <TEMP2CHR+1
                              
0536  17038D                  LBSR    OUTHEXAW
0539  17031C                  LBSR    OUTCRLF
                              
                              ;...........................................................
053C  8E0488                  LDX     #HELPPCMD       ;message d'aide sur les commandes
053F  170346                  LBSR    OUTSTRNG        ;son affichage  
0542  17032F                  LBSR    OUTDASH ;retour nouvelle ligne
0545  1702FC                  LBSR    OUTPRMPT
                              
0548  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
054B  3007                    LEAX    7,X
                              
054D  A680                    LDA     ,X+
054F  9781                    STA     <TEMP2CHR
                              
0551  A684                    LDA     ,X
0553  9782                    STA     <TEMP2CHR+1
                              
0555  17036E                  LBSR    OUTHEXAW
0558  1702FD                  LBSR    OUTCRLF
                              
                              ;........................................................
055B  8E0495                  LDX     #HELPECMD       ;message d'aide sur les commandes
055E  170327                  LBSR    OUTSTRNG        ;son affichage  
0561  170310                  LBSR    OUTDASH ;retour nouvelle ligne
0564  1702DD                  LBSR    OUTPRMPT
                              
0567  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
056A  300A                    LEAX    $0A,X
                              
056C  A680                    LDA     ,X+
056E  9781                    STA     <TEMP2CHR
                              
0570  A684                    LDA     ,X
0572  9782                    STA     <TEMP2CHR+1
                              
0574  17034F                  LBSR    OUTHEXAW
0577  1702DE                  LBSR    OUTCRLF
                              
057A  170263                  LBSR    INPTCHAR        ;attente appuie sur touche
                              
                              ;...........................................................
057D  8E04A2                  LDX     #HELPVCMD       ;message d'aide sur les commandes
0580  170305                  LBSR    OUTSTRNG        ;son affichage  
0583  1702EE                  LBSR    OUTDASH ;retour nouvelle ligne
0586  1702BB                  LBSR    OUTPRMPT
                              
0589  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
058C  300D                    LEAX    $0D,X
                              
058E  A680                    LDA     ,X+
0590  9781                    STA     <TEMP2CHR
                              
0592  A684                    LDA     ,X
0594  9782                    STA     <TEMP2CHR+1
                              
0596  17032D                  LBSR    OUTHEXAW
0599  1702BC                  LBSR    OUTCRLF
                              
                              ;...........................................................
059C  8E04AE                  LDX     #HELPMCMD       ;message d'aide sur les commandes
059F  1702E6                  LBSR    OUTSTRNG        ;son affichage  
05A2  1702CF                  LBSR    OUTDASH ;retour nouvelle ligne
05A5  17029C                  LBSR    OUTPRMPT
                              
05A8  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
05AB  308810                  LEAX    $10,X
                              
05AE  A680                    LDA     ,X+
05B0  9781                    STA     <TEMP2CHR
                              
05B2  A684                    LDA     ,X
05B4  9782                    STA     <TEMP2CHR+1
                              
05B6  17030D                  LBSR    OUTHEXAW
05B9  17029C                  LBSR    OUTCRLF
                              
                              ;...........................................................
05BC  8E04BC                  LDX     #HELPCCMD       ;message d'aide sur les commandes
05BF  1702C6                  LBSR    OUTSTRNG        ;son affichage  
05C2  1702AF                  LBSR    OUTDASH ;retour nouvelle ligne
05C5  17027C                  LBSR    OUTPRMPT
                              
05C8  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
05CB  308813                  LEAX    $13,X
                              
05CE  A680                    LDA     ,X+
05D0  9781                    STA     <TEMP2CHR
                              
05D2  A684                    LDA     ,X
05D4  9782                    STA     <TEMP2CHR+1
                              
05D6  1702ED                  LBSR    OUTHEXAW
05D9  17027C                  LBSR    OUTCRLF
                              
05DC  170201                  LBSR    INPTCHAR        ;attente appuie sur touche
                              
                              ;...........................................................
05DF  8E04C8                  LDX     #HELPOCMD       ;message d'aide sur les commandes
05E2  1702A3                  LBSR    OUTSTRNG        ;son affichage  
05E5  17028C                  LBSR    OUTDASH ;retour nouvelle ligne
05E8  170259                  LBSR    OUTPRMPT
                              
05EB  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
05EE  308816                  LEAX    $16,X
                              
05F1  A680                    LDA     ,X+
05F3  9781                    STA     <TEMP2CHR
                              
05F5  A684                    LDA     ,X
05F7  9782                    STA     <TEMP2CHR+1
                              
05F9  1702CA                  LBSR    OUTHEXAW
05FC  170259                  LBSR    OUTCRLF
                              
                              ;...........................................................
05FF  8E04D7                  LDX     #HELPFCMD       ;message d'aide sur les commandes
0602  170283                  LBSR    OUTSTRNG        ;son affichage  
0605  17026C                  LBSR    OUTDASH ;retour nouvelle ligne
0608  170239                  LBSR    OUTPRMPT
                              
060B  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
060E  308819                  LEAX    $19,X
                              
0611  A680                    LDA     ,X+
0613  9781                    STA     <TEMP2CHR
                              
0615  A684                    LDA     ,X
0617  9782                    STA     <TEMP2CHR+1
                              
0619  1702AA                  LBSR    OUTHEXAW
061C  170239                  LBSR    OUTCRLF
                              
                              ;...........................................................
061F  8E04E6                  LDX     #HELPACMD       ;message d'aide sur les commandes
0622  170263                  LBSR    OUTSTRNG        ;son affichage  
0625  17024C                  LBSR    OUTDASH ;retour nouvelle ligne
0628  170219                  LBSR    OUTPRMPT
                              
062B  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
062E  30881C                  LEAX    $1C,X
                              
0631  A680                    LDA     ,X+
0633  9781                    STA     <TEMP2CHR
                              
0635  A684                    LDA     ,X
0637  9782                    STA     <TEMP2CHR+1
                              
0639  17028A                  LBSR    OUTHEXAW
063C  170219                  LBSR    OUTCRLF
                              
063F  17019E                  LBSR    INPTCHAR        ;attente appuie sur touche
                              
                              ;...........................................................
0642  8E04F4                  LDX     #HELPRCMD       ;message d'aide sur les commandes
0645  170240                  LBSR    OUTSTRNG        ;son affichage  
0648  170229                  LBSR    OUTDASH ;retour nouvelle ligne
064B  1701F6                  LBSR    OUTPRMPT
                              
064E  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
0651  30881F                  LEAX    $1F,X
                              
0654  A680                    LDA     ,X+
0656  9781                    STA     <TEMP2CHR
                              
0658  A684                    LDA     ,X
065A  9782                    STA     <TEMP2CHR+1
                              
065C  170267                  LBSR    OUTHEXAW
065F  1701F6                  LBSR    OUTCRLF
                              
                              ;...........................................................
0662  8E0501                  LDX     #HELPBCMD       ;message d'aide sur les commandes
0665  170220                  LBSR    OUTSTRNG        ;son affichage  
0668  170209                  LBSR    OUTDASH ;retour nouvelle ligne
066B  1701D6                  LBSR    OUTPRMPT
                              
066E  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
0671  308822                  LEAX    $22,X
                              
0674  A680                    LDA     ,X+
0676  9781                    STA     <TEMP2CHR
                              
0678  A684                    LDA     ,X
067A  9782                    STA     <TEMP2CHR+1
                              
067C  170247                  LBSR    OUTHEXAW
067F  1701D6                  LBSR    OUTCRLF
                              
                              ;...........................................................
0682  8E050F                  LDX     #HELPICMD       ;message d'aide sur les commandes
0685  170200                  LBSR    OUTSTRNG        ;son affichage  
0688  1701E9                  LBSR    OUTDASH ;retour nouvelle ligne
068B  1701B6                  LBSR    OUTPRMPT
                              
068E  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
0691  308825                  LEAX    $25,X
                              
0694  A680                    LDA     ,X+
0696  9781                    STA     <TEMP2CHR
                              
0698  A684                    LDA     ,X
069A  9782                    STA     <TEMP2CHR+1
                              
069C  170227                  LBSR    OUTHEXAW
069F  1701B6                  LBSR    OUTCRLF
                              
06A2  3510                    PULS    X
                              
06A4  39                      RTS
                      ;____________________________________________________________________________________
                      
                                      
                      ;************************************************************************************
                      ;Routine RECEIVRS Receive data from serial port to memory adress pointed by X
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: RECVACIA, DIS_MEM
                      ;************************************************************************************
06A5                  RECEIVRS        ;demande nombre d'octets par groupes
06A5  8E0278                  LDX     #NBRBYTES       ;message entrée donnée
06A8  17029D                  LBSR    INPTADDR        ;construire la donnée à partir des caractères hexa entrés
                              
06AB  DC83                    LDD     <TEMPADDR       ;récupération donnée construire à partir de la variable dédiée
06AD  D791                    STB     <SAVBACCU       ;sauvegarder donnée construire dans variable temporaire
                              
06AF  1701A6                  LBSR    OUTCRLF ;retour à la ligne suivante
                              
                      ;demande adresse cible
06B2  8E026D                  LDX     #TRGTADDR
06B5  170290                  LBSR    INPTADDR
                              
06B8  9E83                    LDX     <TEMPADDR
                                      
06BA  17019B                  LBSR    OUTCRLF
                                      
06BD  D691            DSLOOPEX        LDB     <SAVBACCU       ;restauration accumulateur B à partir de variable globale
                      
06BF  3402            DSLOOPIN        PSHS    A       ;Sauve A
                              
06C1  3404                    PSHS    B       ;Sauve B
                              
06C3  17FDAC                  LBSR    RECVACIA        ;Saut vers routine (réception donnée par port série)
                              
06C6  A784                    STA     ,X      ;copie donnée reçu dans A vers adresse cible          
                      
06C8  3410                    PSHS    X       ;sauvegarder index X changé dans routine DIS_MEM
                              
06CA  17ED39                  LBSR    DIS_MEM ;Saut vers routine DIS_MEM (Affiche adresse et donnée envoyée)
                              
06CD  3510                    PULS    X       ;restauration index X changé dans routine DIS_MEM
                                      
06CF  3001                    LEAX    1,X     ;Incrémente X (compteur adresse source)
                              
06D1  3504                    PULS    B       ;Restaure B (compeur octets de 256)
06D3  3502                    PULS    A       ;Restaure A (Compteur groupe de 16)
                              
06D5  5A                      DECB            ;Décremente B (compeur octets de 256)
06D6  1026FFE5        FSLOOPIN        LBNE    DSLOOPIN        ;Si <> 0, Réentrer en boucle de 256 octets
                              
06DA  4A                      DECA            ;Décremente A (Compteur de 256 octets)         
06DB  102AFFDE        FSLOOPEX        LBPL    DSLOOPEX        ;Si <> 0, Réentrer en boucle de 16 groupes
                              
06DF  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine BOOTLOAD Receive data from serial port to memory adress pointed by X
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: RECVACIA, DIS_MEM
                      ;************************************************************************************
06E0                  BOOTLOAD        ;demande nombre d'octets par groupes
06E0  8E0278                  LDX     #NBRBYTES       ;message entrée donnée
06E3  170262                  LBSR    INPTADDR        ;construire la donnée à partir des caractères hexa entrés
                              
06E6  DC83                    LDD     <TEMPADDR       ;récupération donnée construire à partir de la variable dédiée
06E8  D791                    STB     <SAVBACCU       ;sauvegarder donnée construire dans variable temporaire
                              
06EA  17016B                  LBSR    OUTCRLF ;retour à la ligne suivante
                              
                      ;demande adresse cible
06ED  8E026D                  LDX     #TRGTADDR
06F0  170255                  LBSR    INPTADDR
                              
06F3  9E83                    LDX     <TEMPADDR
06F5  9F8E                    STX     <SAVXINDX
                                      
06F7  17015E                  LBSR    OUTCRLF
                                      
06FA  D691            DBLOOPEX        LDB     <SAVBACCU       ;restauration accumulateur B à partir de variable globale
                      
06FC  3402            DBLOOPIN        PSHS    A       ;Sauve A
                              
06FE  3404                    PSHS    B       ;Sauve B
                              
0700  17FD6F                  LBSR    RECVACIA        ;Saut vers routine (réception donnée par port série)
                              
0703  A784                    STA     ,X      ;copie donnée reçu dans A vers adresse cible          
                      
0705  3410                    PSHS    X       ;sauvegarder index X changé dans routine DIS_MEM
                              
0707  17ECFC                  LBSR    DIS_MEM ;Saut vers routine DIS_MEM (Affiche adresse et donnée envoyée)
                              
070A  3510                    PULS    X       ;restauration index X changé dans routine DIS_MEM
                                      
070C  3001                    LEAX    1,X     ;Incrémente X (compteur adresse source)
                              
070E  3504                    PULS    B       ;Restaure B (compeur octets de 256)
0710  3502                    PULS    A       ;Restaure A (Compteur groupe de 16)
                              
0712  5A                      DECB            ;Décremente B (compeur octets de 256)
0713  1026FFE5        FBLOOPIN        LBNE    DBLOOPIN        ;Si <> 0, Réentrer en boucle de 256 octets
                              
0717  4A                      DECA            ;Décremente A (Compteur de 256 octets)         
0718  102AFFDE        FBLOOPEX        LBPL    DBLOOPEX        ;Si <> 0, Réentrer en boucle de 16 groupes
                              
071C  9E8E                    LDX     <SAVXINDX
071E  AD84                    JSR     0,X     ;sauter à sous routine dont l'adresse est contenue dans X
                              
0720  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                              
                      
                      ;************************************************************************************
                      ;Routine INPTKEYB Input Character from PS/2 keyboard
                      ;Entrée: Aucune
                      ;Sorties: TEMPCHAR=Code Ascii du Caractère saisi
                      ;Routines appelée: INITACIA, RECVACIA
                      ;************************************************************************************
0721  50617274204B455942434E54523A2000 PARIKBCN        FCC     "Part KEYBCNTR: ", $00
0731  53544F50204B455942434E54523A2000 STOPKBCN        FCC     "STOP KEYBCNTR: ", $00
0741  53545254204B455942434E54523A2000 STRTKBCN        FCC     "STRT KEYBCNTR: ", $00
0751  5343414E434F4445204B4559423A2000 SCANMESS        FCC     "SCANCODE KEYB: ", $00
0761  4B45594242554620504F494E543A2000 KBBUFPNT        FCC     "KEYBBUF POINT: ", $00
                      
0771  1A40            INPTKEYB        ORCC    #%01000000      ;désactivation FIRQ pour éviter autre appel récursif avant fin routine
                              
0773  3412                    PSHS    A,X     ;sauvegarder registre utilisé
                                      
                      ;début vérification si interruption vient du clavier et pas d'un autre périphérique
                      ;       à implémenter prochainnement
                      ;fin vérification si interruption vient du clavier et pas d'un autre périphérique
                      
0775  9EC8                    LDX     <PNTBUFKB       ;X <- Pointeur courant buffer clavier
                              
                      ;lecture PB0 pour lire les bits DATA du clavier 
0777  B61402          READDATA        LDA     PIAINB  ;puis lecture donnée port B pour lire état CLOCK du clavier
077A  8401                    ANDA    #$01    ;isolation bit DATA du clavier, PB0 du port B du PIA
                              
077C  4D                      TSTA            ;tester bit reçu
077D  2706                    BEQ     BITEQZE ;si bit reçu nul, aller traiter décalage avec Carry = 0
                                              ;si bit reçu non nul, traiter décalage avec Carry = 1
077F  96C7            BITEQON LDA     <SCANCODE       ;lire ancienne valeur de l'octet
0781  1A01                    ORCC    #$01    ;mettre indicateur Carry à 1
0783  2004                    BRA     SHIFTREG        ;aller traiter construction de l'octet reçu
                              
0785  96C7            BITEQZE LDA     <SCANCODE       ;lire ancienne valeur de l'octet
0787  1CFE                    ANDCC   #$FE    ;mettre indicateur Carry à 0
                      
0789  46              SHIFTREG        RORA            ;rotation à droite avec Carry pour enregistrer le bit DATA reçu       
078A  97C7                    STA     <SCANCODE       ;mettre à jour le scancode avec le nouveau bit reçu
                              
078C  0AC6                    DEC     <KEYBCNTR       ;decrémenter compteur octet scancode
                              
078E  96C6                    LDA     <KEYBCNTR       ;tester compteur de bits DATA du clavier reçus
0790  8102                    CMPA    #$02    ;comparer avec #$02
0792  2647                    BNE     EXITINKB        ;si non égal, donc 8 bits pas tous lus, sortir pour attendre
                                              ;nouveau front descendant horloge clavier pour lire bit DATA suivant
                                              
                                              ;si égal, donc les huit bits sont tous lus, donc le convertir en code ASCII
                              
                      ;début conversion Scancode en code ASCII
0794  9F97                    STX     <TEMPWORD       ;enregistrer index X dans variable temporaire
                              
0796  8E030D                  LDX     #KEYBTABL       ;charger adresse table conversion Scancode dans index X
                              
0799  A684            SRCHSCAN        LDA     ,X      ;charger A avec une entrée de table conversion Scancode
                              
079B  91C7                    CMPA    <SCANCODE       ;si non atteinte, comparer Scancode avec entrée table conversion Scancode
079D  270A                    BEQ     CONVSCAN        ;si non égale, aller comparer avec nouvelle entrée
                              
079F  3002                    LEAX    2,X     ;si égale, aller dans case "correspondance" en decrémentant X (au lieu de
                                              ;l'incrémenter, car il a été incrémenté 2 fois en début de boucle)
07A1  8100                    CMPA    #$00    ;tester fin de table conversion Scancode
07A3  26F4                    BNE     SRCHSCAN        ;si fin de table conversion scancode ASCII atteinte sortir
                              
07A5  9E97                    LDX     <TEMPWORD       ;récupérer index X de variable temporaire
                              
07A7  2032                    BRA     EXITINKB
                              
07A9  A601            CONVSCAN        LDA     1,X     ;charger A avec code ASCII correspondant
                              
07AB  9780                    STA     <TEMPCHAR       ;et le transférer dans variable caractère temporaire
                              
07AD  9E97                    LDX     <TEMPWORD       ;récupérer index X de variable temporaire
                      ;fin conversion Scancode en code ASCII
                              
                              
07AF  9680                    LDA     <TEMPCHAR       ;enregistrer le code ASCII trouvé par table conversion conversion Scancode
07B1  A780                    STA     ,X+     ;dans buffer clavier pointé par index X et incrémenter index X
                              
                      ;début annulation incrémentation pointeur du buffer clavier pour test
                              ;STX    <PNTBUFKB       ;et mettre à jour le pointeur courant du buffer clavier avec la nouvelle
                                              ;valeur incrémentée qui se trouve dans l'index X
                      ;début annulation incrémentation pointeur du buffer clavier pour test
                              
07B3  8C01E0                  CMPX    #BUFFERST       ;tester si buffer clavier ne déborde pas sur buffer chaine caractères 
07B6  2611                    BNE     OUTSCANC        ;si pas de déordement du buffer clavier, aller afficher le Scancode
                                              ;si débordement buffer clavier, ramener pointeur buffer clavier au début
                                              
                      ;début initialisation contenu buffer clavier à 0
07B8  3412                    PSHS    A,X
                              
07BA  8614                    LDA     #BUFFKBSZ       ;initialisation compteur octets buffer clavier
07BC  6F80            INTBUFKB        CLR     ,X+     ;mise à 0 du contenu d'une case mémoire du buffer clavier
07BE  4A                      DECA            ;décrementer compteur octets buffer clavier
07BF  4D                      TSTA            ;tester compteur octets buffer clavier
07C0  26FA                    BNE     INTBUFKB        ;si B <> 0, reboucler. sinon (buffer entier initialisé), continuer     
                              
07C2  3512                    PULS    A,X
                      ;fin initialisation contenu buffer clavier à 0
                      
07C4  8E01CC                  LDX     #BUFFERKB       ;X <- adresse du buffer clavier
07C7  9FC8                    STX     <PNTBUFKB       ;X -> pointeur courant du buffer clavier
                                      
07C9                  OUTSCANC        ;LBSR   OUTDOLAR        ;afficher signe Dollar
                              ;STA    <TEMPCHAR       ;mettre Scancode dans variable temporaire pour appeler routine
                              ;LBSR   OUTHEXAB        ;d'affichage du code ASCII reçu du clavier
                              
                              ;LBSR   OUTDBPNT        ;affichage du double point
                              
                              ;LBSR   OUTSPACE        ;affichage d'un espace
                              
                              ;LBSR   OUT1CHAR        ;d'affichage du caractère
                              
                              ;LBSR   OUTCRLF ;retour ligne
                              
                              ;LDA    #$0D
                              ;LBSR   SENDACIA
                              
                      ;début temporisation sous test
07C9  8610                    LDA     #$10
07CB  17FB07          TEMPLOOP        LBSR    WAIT10MS
07CE  4A                      DECA
07CF  4D                      TSTA
07D0  26F9                    BNE     TEMPLOOP
                      ;fin temporisation sous test
                              
                              ;initialisation compteur de bits reçus et du scan code pour un nouveau cycle de réception
07D2  860B                    LDA     #$0B
07D4  97C6                    STA     <KEYBCNTR       ;si bit de Stop atteint, reinitialiser compteur de bit à 0
07D6  0FC7                    CLR     <SCANCODE       ;et mettre à 0 la variable qui contiendra le nouveau Scancode
                                               ;pour recommencer un nouveau cycle
07D8  3512                    PULS    A,X     ;restaurer registre utilisé
                              
07DA  3B                      RTI
                              
07DB  3512            EXITINKB        PULS    A,X     ;restaurer registre utilisé
                              
07DD  1CBF                    ANDCC   #%10111111;activation FIRQ pour valider les nouvelles demandes d'interruption
                              
07DF  3B                      RTI             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************
                      ;Routine INPTCHAR Input Character
                      ;Entrée: Aucune
                      ;Sorties: TEMPCHAR=Code Ascii du Caractère saisi
                      ;Routines appelée: INITACIA, RECVACIA
                      ;************************************************************************************
07E0  3412            INPTCHAR        PSHS    A,X     ;sauvegarder registre utilisé
                      
07E2  17FC8D                  LBSR    RECVACIA        ;lecture caractère
07E5  9780                    STA     <TEMPCHAR       ;le mettre dans varaible dédiée
                              
07E7  3512                    PULS    A,X     ;restaurer registre utilisé
                              
07E9  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine INPTHEXA: Input Hexadecimal character
                      ;Entrée: Aucune
                      ;Sorties: A=Code Hexadécimal du Caractère saisi
                      ;Routines appelée: RECVACIA, SENDACIA, OUTSTRNG
                      ;************************************************************************************   
                      ;ERRMESSG       FCC     "Pas hexadecim.!", $00  ;message d'erreur à afficher
                      
07EA  17FC85          INPTHEXA        LBSR    RECVACIA        ;lecture Caractère
07ED  17FC69                  LBSR    SENDACIA        ;affichage caractère reçu
                              
07F0  8130                    CMPA    #$30    ;comparer caractère saisi avec "0"
07F2  250F                    BLO     AFERMESS        ;si < "O" aller traiter l'erreur
                              
07F4  8139            TSTHEXA9        CMPA    #$39    ;sinon comparer avec "9"
07F6  2E02                    BGT     TSTHEXAA        ;si > "9" donc pas Hexa, aller tester si < "A"
                              
07F8  2008                    BRA     ITISHEXA        ;sinon (<= "9") c'est un caractère Hexadécimal, sortir        
                              
07FA  8141            TSTHEXAA        CMPA    #$41    ;comparer caractère avec "A"
07FC  2505                    BLO     AFERMESS        ;si < "A" (et déjà > "9") donc pas Hexa, traiter erreur
                              
07FE  8146            TSTHEXAF        CMPA    #$46    ;sinon (>= "A") le comparer avec "F"
0800  2E01                    BGT     AFERMESS        ;si > "F" donc pas Hexa, aller traiter erruer
                              
0802  39              ITISHEXA        RTS             ;sinon (<= "F") donc caractère est Hexa et en A, sortir
                              
0803                  AFERMESS        ;PSHS   X       ;sauvegarder X avant son changement
                      
                              ;LDX    #ERRMESSG       ;mettre adresse message d'erreur dans X 
                              ;LBSR   OUTSTRNG        ;pour l'afficher sur teminal série
                              
                              ;PULS   X       ;restaurer ancienne valeur de X après son utilisation
                              
0803  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                              
                      ;************************************************************************************
                      ;Routine INPTHEX1: Input 1st Hexadecimal character
                      ;Entrée: Aucune
                      ;Sorties: TEMPHEX1=Code Hexadécimal du Caractère saisi
                      ;Routines appelée: INPTHEXA
                      ;************************************************************************************
0804  3402            INPTHEX1        PSHS    A       
                      
0806  8DE2                    BSR     INPTHEXA
0808  9785                    STA     <TEMPHEX1
                              
080A  3502                    PULS    A
                              
080C  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************
                      ;Routine INPTHEX2: Input 2nd Hexadecimal character
                      ;Entrée: Aucune
                      ;Sorties: TEMPHEX2=Code Hexadécimal du Caractère saisi
                      ;Routines appelée: INPTHEXA
                      ;************************************************************************************
080D  3402            INPTHEX2        PSHS    A
                      
080F  8DD9                    BSR     INPTHEXA
0811  9786                    STA     <TEMPHEX2
                              
0813  3502                    PULS    A
                              
0815  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                              
                      ;************************************************************************************
                      ;Routine INPTHEX3: Input 3rd Hexadecimal character
                      ;Entrée: Aucune
                      ;Sorties: TEMPHEX3=Code Hexadécimal du Caractère saisi
                      ;Routines appelée: INPTHEXA
                      ;************************************************************************************
0816  3402            INPTHEX3        PSHS    A
                      
0818  8DD0                    BSR     INPTHEXA
081A  9787                    STA     <TEMPHEX3
                              
081C  3502                    PULS    A
                              
081E  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************
                      ;Routine INPTHEX4: Input 4th Hexadecimal character
                      ;Entrée: Aucune
                      ;Sorties: TEMPHEX4=Code Hexadécimal du Caractère saisi
                      ;Routines appelée: INPTHEXA
                      ;************************************************************************************
081F  3402            INPTHEX4        PSHS    A
                              
0821  8DC7                    BSR     INPTHEXA
0823  9788                    STA     <TEMPHEX4
                              
0825  3502                    PULS    A
                              
0827  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************
                      ;Routine OUT1CHAR Out a Character
                      ;Entrée: A=TEMPCHAR=Code Ascii du Caractère à afficher
                      ;Sorties: Aucune
                      ;Routines appelée: SENDACIA
                      ;************************************************************************************
0828  3402            OUT1CHAR        PSHS    A       ;sauvegarder registre utilisé
                              
082A  9680                    LDA     <TEMPCHAR
082C  17FC2A                  LBSR    SENDACIA
                              
082F  3502                    PULS    A       ;restaurer registre utilisé
                              
0831  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************   
                      ;Routine OUT2CHAR Out 2 Characters
                      ;Entrée: TEMP2CHR=Code Ascii du Caractère à afficher
                      ;Sorties: Aucune
                      ;Routines appelée: SENDACIA
                      ;************************************************************************************
0832  3402            OUT2CHAR        PSHS    A       ;sauvegarder registre utilisé
                      
0834  9681                    LDA     <TEMP2CHR
0836  17FC20                  LBSR    SENDACIA
                              
0839  17FA99                  LBSR    WAIT10MS
                      
083C  9682                    LDA     <TEMP2CHR+1
083E  17FC18                  LBSR    SENDACIA
                              
0841  3502                    PULS    A       ;restaurer registre utilisé
                              
0843  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************
                      ;Routine OUTPRMPT Out Prompt Character
                      ;Entrée: Aucune
                      ;Sorties: TEMPCHAR=">" 
                      ;Routines appelée: SENDACIA
                      ;************************************************************************************
0844  3402            OUTPRMPT        PSHS    A       ;sauvegarder registre utilisé
                              
0846  9689                    LDA     <PRMPTCHR
0848  17FC0E                  LBSR    SENDACIA
                      
084B  3502                    PULS    A       ;restaurer registre utilisé
                              
084D  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                              
                      ;************************************************************************************
                      ;Routine OUTSPACE Out Space Character
                      ;Entrée: Aucune
                      ;Sorties: Aucune 
                      ;Routines appelée: SENDACIA
                      ;************************************************************************************
084E  3402            OUTSPACE        PSHS    A       ;sauvegarder registre utilisé
                      
0850  8620                    LDA     #SPACECHR
0852  17FC04                  LBSR    SENDACIA
                              
0855  3502                    PULS    A       ;restaurer registre utilisé
                              
0857  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                              
                      ;************************************************************************************
                      ;Routine OUTCRLF: Out Chariot Return & Line Feed
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: SENDACIA
                      ;************************************************************************************
0858  3402            OUTCRLF PSHS    A       ;sauvegarder registre utilisé
                      
085A  860D                    LDA     #$0D
085C  17FBFA                  LBSR    SENDACIA
                              
085F  17FA73                  LBSR    WAIT10MS
                      
0862  860A                    LDA     #$0A
0864  17FBF2                  LBSR    SENDACIA
                              
0867  3502                    PULS    A       ;restaurer registre utilisé
                      
0869  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine OUTDOLAR: Out Dollar sign "$"
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: INITACIA
                      ;************************************************************************************
086A  3402            OUTDOLAR        PSHS    A       ;sauvegarder registre utilisé
                      
086C  8624                    LDA     #'$
086E  17FBE8                  LBSR    SENDACIA
                                      
0871  3502                    PULS    A       ;restaurer registre utilisé
                      
0873  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine OUTDASH: Out Dash sign "-"
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: INITACIA
                      ;************************************************************************************
0874  3402            OUTDASH PSHS    A       ;sauvegarder registre utilisé
                      
0876  862D                    LDA     #'-
0878  17FBDE                  LBSR    SENDACIA
                                      
087B  3502                    PULS    A       ;restaurer registre utilisé
                      
087D  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine OUTDBPNT: Out double point ":"
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: INITACIA
                      ;************************************************************************************
087E  3402            OUTDBPNT        PSHS    A       ;sauvegarder registre utilisé
                      
0880  863A                    LDA     #':
0882  17FBD4                  LBSR    SENDACIA
                                      
0885  3502                    PULS    A       ;restaurer registre utilisé
                      
0887  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine OUTSTRNG: Out String to serial port
                      ;Entrée: X=Chaine de caractèrer à afficher, terminée par "0"
                      ;Sorties: Aucune
                      ;Routines appelée: SENDACIA
                      ;*******************************************************************
0888  3402            OUTSTRNG        PSHS    A       ;sauvegarder registre utilisé
                              
088A  A680                    LDA     ,X+     ;Charger A avec premier charactère de la chaine
                              
088C  17FBCA          OUTSTRN1        LBSR    SENDACIA        ;le transférer au terminal série
                              
088F  A680                    LDA     ,X+     ;charger A avec caractère suivant      
0891  8100                    CMPA    #$00    ;le comparer avec "0" terminal (caractère de fin de la chaine) 
0893  26F7                    BNE     OUTSTRN1        ;si fin chaine non encore atteinte, continuer en transférant au terminal
                              
0895  3502                    PULS    A       ;si fin de chaine restaurer registre A
                              
0897  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************   
                      ;Routine OUTHEXAB Out Hexadecimal number in 2 characters
                      ;Entrée: TEMPCHAR=Code Ascii du Caractère à afficher en hexadécimal
                      ;Sorties: TEMP2CHR=Nibble supérieur, TEMP2CHR+1=Nibble inférieur
                      ;Routines appelée: Aucune
                      ;************************************************************************************
0898  3406            OUTHEXAB        PSHS    A,B
                      
089A  9680                    LDA     <TEMPCHAR
089C  1F89                    TFR     A,B
089E  840F                    ANDA    #$0F
08A0  8A30                    ORA     #$30
08A2  57                      ASRB
08A3  57                      ASRB
08A4  57                      ASRB
08A5  57                      ASRB
08A6  C40F                    ANDB    #$0F
08A8  CA30                    ORB     #$30
08AA  C139                    CMPB    #$39
08AC  2E04                    BGT     CORRIGEB
                      
08AE  D781            AFFICHEB        STB     <TEMP2CHR
                              
08B0  2004                    BRA     TRAITEA
                      
08B2  CB07            CORRIGEB        ADDB    #$07
08B4  20F8                    BRA     AFFICHEB
                      
08B6  8139            TRAITEA CMPA    #$39
08B8  2E08                    BGT     CORRIGEA
                      
08BA  9782            AFFICHEA        STA     <TEMP2CHR+1
                              
08BC  17FF73                  LBSR    OUT2CHAR
                              
08BF  3506                    PULS    A,B
                              
08C1  39                      RTS
                      
08C2  8B07            CORRIGEA        ADDA    #$07
08C4  20F4                    BRA     AFFICHEA
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************   
                      ;Routine OUTHEXAW Out Hexadecimal number in 4 characters
                      ;Entrée: TEMP2CHR=Code Ascii du 1er Caractère MSB à afficher en hexadéc.
                      ;        TEMP2CHR+1=Code Ascii du 2eme Caractère LSB à afficher en hexa
                      ;Sorties: TEMPHEX1=Nibble supérieur du 1ere nombre hexadécimal
                      ;       TEMPHEX2=Nibble inférieur du 1ere nombre hexadécimal
                      ;       TEMPHEX3=Nibble supérieur du 2eme nombre hexadécimal
                      ;       TEMPHEX4=Nibble inférieur du 2eme nombre hexadécimal
                      ;Routines appelée: OUTHEXAB
                      ;************************************************************************************
08C6  3406            OUTHEXAW        PSHS    A,B
                              
08C8  9681                    LDA     <TEMP2CHR
08CA  D682                    LDB     <TEMP2CHR+1
                              
                      ;1er nombre hexadécimal
08CC  9780                    STA     <TEMPCHAR
                              
08CE  8DC8                    BSR     OUTHEXAB
                              
08D0  9681                    LDA     <TEMP2CHR
08D2  9785                    STA     <TEMPHEX1
                              
08D4  9682                    LDA     <TEMP2CHR+1
08D6  9786                    STA     <TEMPHEX2
                      
                      ;2ème nombre hexadécimal              
08D8  D780                    STB     <TEMPCHAR
                              
08DA  8DBC                    BSR     OUTHEXAB
                              
08DC  D681                    LDB     <TEMP2CHR
08DE  D787                    STB     <TEMPHEX3
                              
08E0  D682                    LDB     <TEMP2CHR+1
08E2  D788                    STB     <TEMPHEX4
                              
08E4  3506                    PULS    A,B
                              
08E6  39                      RTS
                      ;____________________________________________________________________________________
                      
                              
                      ;************************************************************************************
                      ;Routine CNVHXBCD Convert Hexadecimal number to BCD number
                      ;Entrée: A=Nombre en hexadécimal à convertir
                      ;Sorties: TEMPCHAR=Unités, TEMP2CHR=Dizaines, TEMP2CHR+1=Centaines
                      ;Routines appelée: Aucune
                      ;************************************************************************************
08E7  0F80            CNVHXBCD        CLR     <TEMPCHAR       ;remise à 0 de variables temporaire
08E9  0F81                    CLR     <TEMP2CHR       ;à utiliser dans la conversion
08EB  0F82                    CLR     <TEMP2CHR+1
                              
08ED  8164            CENTAINE        CMPA    #$64
08EF  2506                    BLO     DIZAINES
                              
08F1  8064                    SUBA    #$64
08F3  0C80                    INC     <TEMPCHAR
                              
08F5  20F6                    BRA     CENTAINE
                              
08F7  810A            DIZAINES        CMPA    #$0A
08F9  2506                    BLO     UNITES
                              
08FB  800A                    SUBA    #$0A
08FD  0C81                    INC     <TEMP2CHR
08FF  20F6                    BRA     DIZAINES
                              
0901  9782            UNITES  STA     <TEMP2CHR+1
                      
0903  39                      RTS
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine CNVBCDHX Convert BCD number to Hexadecimal number
                      ;Entrée: TEMPCHAR=Unités, TEMP2CHR=Dizaines, TEMP2CHR+1=Centaines à convertir
                      ;Sorties: A=MSB du Nombre en hexadécimal,B=LSB du Nombre en hexadécimal
                      ;Routines appelée: Aucune
                      ;************************************************************************************
0904  39              CNVBCDHX        RTS
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine BULDBYTE Build a byte from 2 Hexa characters
                      ;Entrée: A, B = 2 Hexa characters
                      ;Sorties: TEMPCHAR = Data
                      ;Routines appelée: Aucune
                      ;************************************************************************************
                      ;first hexa
0905  8141            BULDBYTE        CMPA    #$41
0907  2504                    BLO     NUMERIC5
                              
0909  8037            ALPHANM5        SUBA    #$37
090B  2002                    BRA     BULDHEX5
                              
090D  8030            NUMERIC5        SUBA    #$30
                      
090F  48              BULDHEX5        ASLA
0910  48                      ASLA
0911  48                      ASLA
0912  48                      ASLA
                              
0913  9780                    STA     <TEMPCHAR
                      
                      ;second hexa    
0915  C141                    CMPB    #$41
0917  2504                    BLO     NUMERIC6
                              
0919  C037            ALPHANM6        SUBB    #$37
091B  2002                    BRA     BULDHEX6
                              
091D  C030            NUMERIC6        SUBB    #$30
                      
091F  DA80            BULDHEX6        ORB     <TEMPCHAR
0921  D780                    STB     <TEMPCHAR
                              
0923  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                              
                      ;************************************************************************************
                      ;Routine BULDADDR Build Address
                      ;Entrée: TEMPHEX1, TEMPHEX2, TEMPHEX3, TEMPHEX4 = 4 Hexa characters
                      ;Sorties: TEMPADDR, TEMPADDR+1 = Address
                      ;Routines appelée: Aucune
                      ;************************************************************************************
0924  3406            BULDADDR        PSHS    A,B     ;sauvegarder registre utilisés
                              
0926  9685                    LDA     <TEMPHEX1
0928  D686                    LDB     <TEMPHEX2
                              
092A  8DD9                    BSR     BULDBYTE
                              
092C  9680                    LDA     <TEMPCHAR
092E  9783                    STA     <TEMPADDR
                      
0930  9687                    LDA     <TEMPHEX3
0932  D688                    LDB     <TEMPHEX4
                              
0934  8DCF                    BSR     BULDBYTE
                              
0936  9680                    LDA     <TEMPCHAR
0938  9784                    STA     <TEMPADDR+1
                              
093A  3506                    PULS    A,B     ;restaurer registres utilisés
                              
093C  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine BULDDATA Build Data
                      ;Entrée: TEMPHEX1, TEMPHEX2 = 2 Hexa characters
                      ;Sorties: TEMPCHAR = Data
                      ;Routines appelée: BULDBYTE
                      ;************************************************************************************
093D  3406            BULDDATA        PSHS    A,B     ;sauvegarder registre utilisés
                              
093F  9685                    LDA     <TEMPHEX1
0941  D686                    LDB     <TEMPHEX2
                              
0943  8DC0                    BSR     BULDBYTE                
                      
0945  3506                    PULS    A,B     ;restaurer registres utilisés
                              
0947  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine INPTADDR: demande saisie adresse de fin
                      ;Entrée: X: Adresse chaine caractères à afficher comme prompt de saisie d'adresse
                      ;Sorties: TEMPADDR
                      ;Routines appelée: Aucune
                      ;************************************************************************************
0948  17FF3D          INPTADDR        LBSR    OUTSTRNG        ;afficher message d'entrée d'adresse
                              
094B  17FF1C                  LBSR    OUTDOLAR        ;afficher signe "$"
                              
094E  17FEB3                  LBSR    INPTHEX1        ;entrer 1er caractère Hexa de l'adresse
0951  17FEB9                  LBSR    INPTHEX2        ;entrer 2eme caractère Hexa de l'adresse
0954  17FEBF                  LBSR    INPTHEX3        ;entrer 3eme caractère Hexa de l'adresse
0957  17FEC5                  LBSR    INPTHEX4        ;entrer 4eme caractère Hexa de l'adresse
                              
095A  17FFC7                  LBSR    BULDADDR        ;construire l'adresse à partir des caractères hexa entrés
                              
095D  39                      RTS
                      ;____________________________________________________________________________________
                      
                              
                      ;************************************************************************************
                      ;Routine INPTDATA: demande saisie donnée (octet)
                      ;Entrée: X: Adresse chaine caractères à afficher commoe prompt de saisie d'adresse
                      ;Sorties: TEMPADDR
                      ;Routines appelée: Aucune
                      ;************************************************************************************
095E  17FF09          INPTDATA        LBSR    OUTDOLAR
                              
0961  17FEA0                  LBSR    INPTHEX1        ;entrer 1er caractère Hexa de la donnée
0964  17FEA6                  LBSR    INPTHEX2        ;entrer 2eme caractère Hexa de la donnée
                              
0967  17FFD3                  LBSR    BULDDATA        ;construire la donnée à partir des caractères hexa entrés
                              
096A  39                      RTS
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine INPTCMND Input Command
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: INPTCHAR, OUT1CHAR, EXECCMND
                      ;************************************************************************************
096B  3412            INPTCMND        PSHS    A,X     ;sauvegarder les registres utilisés
                      
096D  17FED4                  LBSR    OUTPRMPT        ;afficher Prompt pour l'attente de commande
                              
0970  8E01E0                  LDX     #BUFFERST       ;index X pointe sur zone mémoire BUFFERST
                              
0973  17FAFC          INPTCMD1        LBSR    RECVACIA        ;lecture Caractère
                              
0976  17FAE0                  LBSR    SENDACIA        ;ecriture caractère reçu
                              
0979  810D                    CMPA    #$0D    ;caractère reçu = "Chariot Return"?
                              ;BEQ    INPTCMD2        ;si oui aller à INPTCMND2: saisir et tester caractère suivant
097B  2704                    BEQ     INPTCMD3        ;si oui aller à INPTCMND3: charger caractère $00 (0 terminal)
                              
097D  A780                    STA     ,X+     ;sinon (caractère normal) le charger dans BUFFERST
                              
097F  20F2                    BRA     INPTCMD1        ;aller lire caractère suivant
                              
                      ;INPTCMD2       STA     <TEMPCHAR       ;sauvegarder premier caractère (CR) pour utilisation ultérieure
                              
                              ;LBSR   RECVACIA        ;lecture Caractère
                              
                              ;LBSR   SENDACIA        ;ecriture caractère reçu
                              
                              ;STA    <TEMP2CHR       ;sauvegarder premier caractère (CR) pour utilisation ultérieure
                              
                              ;LDA    <TEMP2CHR       ;sauvegarder premier caractère (CR) pour utilisation ultérieure
                              
                              ;CMPA   #$0A    ;caractère reçu = "Line Feed"?
                              ;BEQ    INPTCMD3        ;si oui aller à INPTCMND3: charger caractère $00 dans BUFFERST
                              
                              ;LDA    <TEMPCHAR       ;sinon (caractère normal), charger caractère "CR"  
                              ;STA    ,X+     ;dans BUFFERST puisque caractère suivant est <> de "LF"        
                              
                              ;LDA    <TEMP2CHR       ;charger caractère (normal) suivant le caractère "CR"
                              ;STA    ,X+     ;dans BUFFERST puisque caractère suivant "CR" est <> de "LF"
                              
                              ;BRA    INPTCMD1        ;aller lire caractère suivant
                              
0981  8600            INPTCMD3        LDA     #$00    ;charger caractère $00 (caractère 0 terminal)
0983  A784                    STA     ,X      ;dans BUFFERST
                              
0985  8D15                    BSR     EXECCMND        ;executer commande saisie
                              
0987  3512                    PULS    A,X     ;restaurer les registres utilisés
                              
0989  20E0                    BRA     INPTCMND
                              
098B  39                      RTS             ;Fin de sous routine et retour au programme appelant
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************
                      ;Routine EXECCMND Execute command
                      ;Entrée: BUFFERST=Commande reçue par RS232
                      ;Sorties: 
                      ;Routines appelée: OUTSTRNG, OUTCRLF
                      ;************************************************************************************
098C  436D6E6465206E6F6E207472762E2100 ERCMDMES        FCC     "Cmnde non trv.!", $00  ;si fin de table commandes atteint
                      
099C  3412            EXECCMND        PSHS    A,X     ;sauvegarder les registres utilisés
                      
099E  8E0225                  LDX     #CMNDTABL       ;charger X avec première entrée de la table commandes
                              
09A1  A684            CMPENTRY        LDA     ,X      ;A<-entrée de table commandes
                              
09A3  91E0                    CMPA    <BUFFERST       ;comparer commande saisie avec entrée de table commandes
09A5  2711                    BEQ     EXECUTCMD       ;si égale l'exécuter
                      
09A7  3003                    LEAX    3,X     ;passer à l'adresse de l'entrée suivante de la table commandes
                              
09A9  8100                    CMPA    #$00
09AB  26F4                    BNE     CMPENTRY
                              
09AD  8E098C                  LDX     #ERCMDMES
09B0  17FED5                  LBSR    OUTSTRNG        ;afficher message d'erreur "Commande non trouvée!"
09B3  17FEA2                  LBSR    OUTCRLF
                              
09B6  2004                    BRA     RESTREXIT       ;aller restaurer registres et sortir
                      
09B8  AE01            EXECUTCMD       LDX     1,X     ;charger X avec adresse contenue dans X+1
                              
09BA  AD84                    JSR     ,X      ;sauter à sous routine dont l'adresse est contenue dans X
                              
09BC  3512            RESTREXIT       PULS    A,X     ;restaurer les registres utilisés
                      
09BE  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************
                      ;Routine VIEWMEMR: Affiche une zone mémoire, début pointée par X et fin pointée par Y
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: INPTADDR, OUTCRLF, OUTHEXAW, OUTSPACE, OUTDBLPNT
                      ;************************************************************************************
09BF  3412            VIEWMEMR        PSHS    A,X
                              
09C1  8E024D                  LDX     #STRTADDR       ;message entrée adresse début
09C4  17FF81                  LBSR    INPTADDR        ;demande saisie adresse
                              
09C7  9E83                    LDX     <TEMPADDR
                              
09C9  3410                    PSHS    X
                              
09CB  17FE8A                  LBSR    OUTCRLF
                              
09CE  8E0258                  LDX     #ENDADDR        ;message entrée adresse fin
09D1  17FF74                  LBSR    INPTADDR        ;demande saisie adresse
                              
09D4  17FE81                  LBSR    OUTCRLF
                              
09D7  3510                    PULS    X
                              
09D9  9C83                    CMPX    <TEMPADDR       ;comparer adresse début avec adresse fin 
09DB  2F02                    BLE     VIEWMEM1        ;si inférieure aller à VIEMEM1
                              
09DD  9F83                    STX     <TEMPADDR       ;sinon (début > fin) mettre adresse début dans adresse fin
                              
09DF  9F81            VIEWMEM1        STX     <TEMP2CHR       ;mettre adresse début dans variable
                              
09E1  17FEE2                  LBSR    OUTHEXAW        ;afficher adresse en Hexadécimal
09E4  17FE97                  LBSR    OUTDBPNT
09E7  17FE64                  LBSR    OUTSPACE
                              
09EA  A680                    LDA     ,X+
09EC  9780                    STA     <TEMPCHAR
                              
09EE  17FEA7                  LBSR    OUTHEXAB        ;afficher donnée en Hexadécimal
                              
09F1  17FE64                  LBSR    OUTCRLF
                              
09F4  9C83                    CMPX    <TEMPADDR
09F6  23E7                    BLS     VIEWMEM1
                              
09F8  3512                    PULS    A,X
                              
09FA  39                      RTS
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine MDFYMEMR: Modifie une case mémoire en saisissant son nouveau contenu
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: INPTADDR, OUTHEXAW, OUTSPACE, OUTHEXAB, OUTDBPNT, INPTDATA, OUTCRLF
                      ;************************************************************************************
09FB  3412            MDFYMEMR        PSHS    A,X
                              
09FD  8E024D                  LDX     #STRTADDR       ;message entrée adresse début
0A00  17FF45                  LBSR    INPTADDR        ;demande saisie adresse
                                      
0A03  9E83                    LDX     <TEMPADDR
0A05  3410                    PSHS    X
                              
0A07  17FE4E                  LBSR    OUTCRLF
                              
0A0A  8E0258                  LDX     #ENDADDR        ;message entrée adresse fin
0A0D  17FF38                  LBSR    INPTADDR        ;demande saisie adresse
                                      
0A10  17FE45                  LBSR    OUTCRLF
                              
0A13  3510                    PULS    X
                              
0A15  9C83                    CMPX    <TEMPADDR       ;comparer adresse début avec adresse fin 
0A17  2F02                    BLE     MDFYMEM1        ;si inférieure aller à VIEMEM1
                              
0A19  9F83                    STX     <TEMPADDR       ;sinon (début > fin) mettre adresse début dans adresse fin
                              
0A1B  9F81            MDFYMEM1        STX     <TEMP2CHR       ;mettre adresse début dans variable
                              
0A1D  17FEA6                  LBSR    OUTHEXAW        ;afficher adresse en Hexadécimal
0A20  17FE2B                  LBSR    OUTSPACE
                              
                              ;affichage donnée
0A23  A684                    LDA     ,X
                                      
0A25  9780                    STA     <TEMPCHAR
                              
0A27  17FE6E                  LBSR    OUTHEXAB        ;afficher donnée en Hexadécimal
                              
0A2A  17FE51                  LBSR    OUTDBPNT        
                              
0A2D  17FE1E                  LBSR    OUTSPACE
                              ;fin affichage donnée
                              
0A30  17FF2B                  LBSR    INPTDATA        ;demande saisie donnée (octet) et construire la donnée
                                              ;à partir des caractères hexa entrés
0A33  9680                    LDA     <TEMPCHAR       ;sauvegarder donnée construire dans variable dédiée
                              
0A35  17FE20                  LBSR    OUTCRLF
                              
0A38  A780                    STA     ,X+     ;la transférer dans l'adresse désignée
                              
0A3A  9C83                    CMPX    <TEMPADDR
0A3C  23DD                    BLS     MDFYMEM1
                              
0A3E  3512                    PULS    A,X
                              
0A40  39                      RTS     
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************
                      ;Routine COPYMEMR: Copie une zone mémoire X de A groupes de B octets dans une autre zone Y
                      ;Entrée: A=Nombre de groupes, B=Nombre d'octets par groupe, X=Adresse source, Y=Adresse cible
                      ;Sorties: Aucune
                      ;Routines appelée: INPTADDR, OUTHEXAW, OUTSPACE, OUTHEXAB, OUTDBPNT, INPTDATA,
                      ;                  OUTCRLF, OUTSTRNG, OUTDASH, OUTPRMPT
                      ;************************************************************************************
0A41                  COPYMEMR        
                      ;demande adresse source
0A41  8E0262                  LDX     #SRCEADDR
0A44  17FF01                  LBSR    INPTADDR
                              
0A47  9E83                    LDX     <TEMPADDR
                              
0A49  3410                    PSHS    X       ;sauvegarder X (adresse source)
                              
0A4B  17FE0A                  LBSR    OUTCRLF
                      
                      ;demande adresse cible  
0A4E  8E026D                  LDX     #TRGTADDR
0A51  17FEF4                  LBSR    INPTADDR
                              
0A54  109E83                  LDY     <TEMPADDR
                              
0A57  17FDFE                  LBSR    OUTCRLF ;retour à la ligne suivante
                                      
                      ;demande nombre d'octets par groupes
0A5A  8E0278                  LDX     #NBRBYTES       ;message entrée donnée
0A5D  17FE28                  LBSR    OUTSTRNG        ;afficher message d'entrée d'adresse
                              
0A60  17FEFB                  LBSR    INPTDATA        ;demande saisie donnée (octet) et construire la donnée
                                              ;à partir des caractères hexa entrés
0A63  D680                    LDB     <TEMPCHAR       ;utiliser donnée construire dans variable dédiée
                              
0A65  D791                    STB     <SAVBACCU       ;sauvegarder données construite dans variable temporaire
                              
0A67  17FDEE                  LBSR    OUTCRLF ;retour à la ligne suivante
                              
                              ;début demande nombre groupes d'octets
0A6A  8E0286                  LDX     #NBREGRPS       ;message entrée donnée
0A6D  17FE18                  LBSR    OUTSTRNG        ;afficher message d'entrée d'adresse
                              
0A70  17FEEB                  LBSR    INPTDATA        ;demande saisie donnée (octet) et construire la donnée
                                              ;à partir des caractères hexa entrés
0A73  9680                    LDA     <TEMPCHAR       ;sauvegarder donnée construire dans variable dédiée
                              
0A75  3510                    PULS    X       ;restaurer X (adresse source) pour début de copie
                              
0A77  17FDDE                  LBSR    OUTCRLF ;retour à la ligne suivante
                              ;fin demande nombre groupes d'octets
                                      
                      ;copie des données     
0A7A  D691            DLOOPEX LDB     <SAVBACCU       ;utiliser donnée construire dans variable dédiée
                                      
0A7C  3402                    PSHS    A       ;Sauve A (Compteur de groupes)
                              
0A7E  A684            DLOOPIN LDA     ,X      ;Charge donnée de mémoire source dans A               
0A80  A7A4                    STA     ,Y      ;Mémorise donnée lue en mémoire cible
                              
                              ;début affichage adresse source
0A82  9F81                    STX     <TEMP2CHR       ;mettre adresse début dans variable
                              
0A84  17FE3F                  LBSR    OUTHEXAW        ;afficher adresse en Hexadécimal
0A87  17FDF4                  LBSR    OUTDBPNT
0A8A  17FDC1                  LBSR    OUTSPACE
                              ;fin affichage adresse source
                              
                              ;début affichage donnée à copier
0A8D  A684                    LDA     ,X
                                      
0A8F  9780                    STA     <TEMPCHAR
                              
0A91  17FE04                  LBSR    OUTHEXAB        ;afficher donnée en Hexadécimal
                              ;fin affichage donnée à copier
                              
                              ;début affichage signes de copie
0A94  17FDB7                  LBSR    OUTSPACE
                              
0A97  17FDDA                  LBSR    OUTDASH 
0A9A  17FDA7                  LBSR    OUTPRMPT
                              
0A9D  17FDAE                  LBSR    OUTSPACE
                              ;début affichage signes de copie
                              
                              ;début affichage adresse cible
0AA0  109F81                  STY     <TEMP2CHR       ;mettre adresse début dans variable
                              
0AA3  17FE20                  LBSR    OUTHEXAW        ;afficher adresse en Hexadécimal
0AA6  17FDA5                  LBSR    OUTSPACE
                              
0AA9  17FDAC                  LBSR    OUTCRLF ;retour ligne
                              ;fin affichage adresse cible
                              
0AAC  3001                    LEAX    1,X     ;incrémentation index X
                              
0AAE  3121                    LEAY    1,Y     ;incrémentation index Y
                                      
0AB0  5A                      DECB            ;Décremente B (compteur octets de 64)
0AB1  26CB            FLOOPIN BNE     DLOOPIN ;Si <> 0, Réentrer en boucle de 64 octets
                              
0AB3  3502                    PULS    A       ;Restaure A (Compteur de groupes)
                              
0AB5  4A                      DECA            ;Décremente A (Compteur d'octets)
0AB6  26C2            FLOOPEX BNE     DLOOPEX ;Si <> 0, Réentrer en boucle de 32 groupes
                      
0AB8  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                              
                              
                              
                      ;************************************************************************************
                      ;Routine COMPMEMR: Compare une zone mémoire X de A groupes de B octets avec une autre zone Y
                      ;Entrée: A=Nombre de groupes, B=Nombre d'octets par groupe, X=Adresse source, Y=Adresse cible
                      ;Sorties: Aucune
                      ;Routines appelée: INPTADDR, GWAIT, DIS_MEM
                      ;************************************************************************************
0AB9                  COMPMEMR        
                      ;demande adresse source
0AB9  8E0262                  LDX     #SRCEADDR
0ABC  17FE89                  LBSR    INPTADDR
                              
0ABF  9E83                    LDX     <TEMPADDR
                              
0AC1  3410                    PSHS    X       ;sauvegarder X (adresse source)
                              
0AC3  17FD92                  LBSR    OUTCRLF
                      
                      ;demande adresse cible  
0AC6  8E026D                  LDX     #TRGTADDR
0AC9  17FE7C                  LBSR    INPTADDR
                              
0ACC  109E83                  LDY     <TEMPADDR
                              
0ACF  17FD86                  LBSR    OUTCRLF ;retour à la ligne suivante
                                      
                      ;demande nombre d'octets par groupes
0AD2  8E0278                  LDX     #NBRBYTES       ;message entrée donnée
0AD5  17FDB0                  LBSR    OUTSTRNG        ;afficher message d'entrée d'adresse
                              
0AD8  17FE83                  LBSR    INPTDATA        ;demande saisie donnée (octet) et construire la donnée
                                              ;à partir des caractères hexa entrés
0ADB  D680                    LDB     <TEMPCHAR       ;utiliser donnée construire dans variable dédiée
                              
0ADD  D791                    STB     <SAVBACCU       ;sauvegarder données construite dans variable temporaire
                              
0ADF  17FD76                  LBSR    OUTCRLF ;retour à la ligne suivante
                              
                              ;début demande nombre groupes d'octets
0AE2  8E0286                  LDX     #NBREGRPS       ;message entrée donnée
0AE5  17FDA0                  LBSR    OUTSTRNG        ;afficher message d'entrée d'adresse
                              
0AE8  17FE73                  LBSR    INPTDATA        ;demande saisie donnée (octet) et construire la donnée
                                              ;à partir des caractères hexa entrés
0AEB  9680                    LDA     <TEMPCHAR       ;sauvegarder donnée construire dans variable dédiée
                              
0AED  3510                    PULS    X       ;restaurer X (adresse source) pour début de copie
                              
0AEF  17FD66                  LBSR    OUTCRLF ;retour à la ligne suivante
                              ;fin demande nombre groupes d'octets
                                      
                      ;copie des données     
0AF2  D691            DOLOOPEX        LDB     <SAVBACCU       ;utiliser donnée construire dans variable dédiée
                                      
0AF4  3402                    PSHS    A       ;Sauve A (Compteur de groupes)
                              
0AF6  A684            DOLOOPIN        LDA     ,X      ;Charge donnée de mémoire source dans A               
                              ;STA    ,Y      ;Mémorise donnée lue en mémoire cible
0AF8  A1A4                    CMPA    ,Y      ;comparer donnée lue avec donnée en mémoire source
0AFA  2731                    BEQ     SUITE
                              
                              ;début affichage adresse source
0AFC  9F81                    STX     <TEMP2CHR       ;mettre adresse début dans variable
                              
0AFE  17FDC5                  LBSR    OUTHEXAW        ;afficher adresse en Hexadécimal
0B01  17FD7A                  LBSR    OUTDBPNT
0B04  17FD47                  LBSR    OUTSPACE
                              ;fin affichage adresse source
                              
                              ;début affichage donnée source
0B07  A684                    LDA     ,X
                                      
0B09  9780                    STA     <TEMPCHAR
                              
0B0B  17FD8A                  LBSR    OUTHEXAB        ;afficher donnée en Hexadécimal
                              ;fin affichage donnée source
                              
                              ;début affichage signes de copie
0B0E  17FD3D                  LBSR    OUTSPACE
                              
0B11  17FD60                  LBSR    OUTDASH 
                              
0B14  17FD37                  LBSR    OUTSPACE
                              ;début affichage signes de copie
                              
                              ;début affichage adresse cible
0B17  109F81                  STY     <TEMP2CHR       ;mettre adresse début dans variable
                              
0B1A  17FDA9                  LBSR    OUTHEXAW        ;afficher adresse en Hexadécimal
0B1D  17FD5E                  LBSR    OUTDBPNT
0B20  17FD2B                  LBSR    OUTSPACE
                              ;fin affichage adresse cible
                              
                              ;début affichage donnée cible
0B23  A6A4                    LDA     ,Y
                                      
0B25  9780                    STA     <TEMPCHAR
                              
0B27  17FD6E                  LBSR    OUTHEXAB        ;afficher donnée en Hexadécimal
                              
0B2A  17FD2B                  LBSR    OUTCRLF ;retour ligne
                              ;fin affichage donnée cible
                              
0B2D  3001            SUITE   LEAX    1,X     ;incrémentation index X
                              
0B2F  3121                    LEAY    1,Y     ;incrémentation index Y
                                      
0B31  5A                      DECB            ;Décremente B (compteur octets de 64)
0B32  26C2            FOLOOPIN        BNE     DOLOOPIN        ;Si <> 0, Réentrer en boucle de 64 octets
                              
0B34  3502                    PULS    A       ;Restaure A (Compteur de groupes)
                              
0B36  4A                      DECA            ;Décremente A (Compteur d'octets)
0B37  26B9            FOLOOPEX        BNE     DOLOOPEX        ;Si <> 0, Réentrer en boucle de 32 groupes
                      
0B39  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************
                      ;Routine COPYEEPR: Copie une zone mémoire X de A groupes de B octets dans une autre zone Y EEPROM
                      ;Entrée: A=Nombre de groupes, B=Nombre d'octets par groupe, X=Adresse source, Y=Adresse cible
                      ;Sorties: Aucune
                      ;Routines appelée: INPTADDR, GWAIT, DIS_MEM
                      ;************************************************************************************
                      ;demande adresse source
0B3A  8E0262          COPYEEPR        LDX     #SRCEADDR
0B3D  17FE08                  LBSR    INPTADDR
                              
0B40  9E83                    LDX     <TEMPADDR
                              
0B42  3410                    PSHS    X       ;sauvegarder X (adresse source)
                              
0B44  17FD11                  LBSR    OUTCRLF
                      
                      ;demande adresse cible  
0B47  8E026D                  LDX     #TRGTADDR
0B4A  17FDFB                  LBSR    INPTADDR
                              
0B4D  109E83                  LDY     <TEMPADDR
                              
0B50  17FD05                  LBSR    OUTCRLF ;retour à la ligne suivante
                                      
                      ;demande nombre d'octets par groupes
0B53  8E0278                  LDX     #NBRBYTES       ;message entrée donnée
0B56  17FD2F                  LBSR    OUTSTRNG        ;afficher message d'entrée d'adresse
                              
0B59  17FE02                  LBSR    INPTDATA        ;demande saisie donnée (octet) et construire la donnée
                                              ;à partir des caractères hexa entrés
0B5C  D680                    LDB     <TEMPCHAR       ;sauvegarder donnée construire dans variable dédiée
                              
0B5E  17FCF7                  LBSR    OUTCRLF ;retour à la ligne suivante
                              
                      ;demande nombre groupes d'octets
0B61  8E0286                  LDX     #NBREGRPS       ;message entrée donnée
0B64  17FD21                  LBSR    OUTSTRNG        ;afficher message d'entrée d'adresse
                              
0B67  17FDF4                  LBSR    INPTDATA        ;demande saisie donnée (octet) et construire la donnée
                                              ;à partir des caractères hexa entrés
0B6A  9680                    LDA     <TEMPCHAR       ;sauvegarder donnée construire dans variable dédiée
                              
0B6C  3510                    PULS    X       ;restaurer X (adresse source) pour début de copie
                              
0B6E  17FCE7                  LBSR    OUTCRLF ;retour à la ligne suivante
                              
                      ;mise en place de protection
                              ;PULS   A       ;sauvegarde registres utilisés pour la protection
                              
                              ;LDA    #$AA
                              ;STA    $5555   ;adresse réelle à convertir en adresse EEPROM mapée selon décodage adresse
                              
                              ;LDA    #$55
                              ;STA    $2AAA   ;adresse réelle à convertir en adresse EEPROM mapée selon décodage adresse
                              
                              ;LDA    #$AO
                              ;STA    $5555   ;adresse réelle à convertir en adresse EEPROM mapée selon décodage adresse
                              
                              ;PSHS   A       ;restauration registres utilisés pour la protection
                              
                      ;copie des données     
0B71  3404            DLOOPEXE        PSHS    B       ;Sauve B (Compteur d'octets)
                              
0B73  3402                    PSHS    A       ;Sauve A (Compteur de groupes)
                              
0B75  A680            DLOOPINE        LDA     ,X+     ;Charge donnée de mémoire source dans A               
0B77  A7A0                    STA     ,Y+     ;Mémorise donnée lue en mémoire cible
0B79  5A                      DECB            ;Décremente B (compteur octets de 64)
0B7A  26F9            FLOOPINE        BNE     DLOOPINE        ;Si <> 0, Réentrer en boucle de 64 octets
                              
0B7C  8608                    LDA     #$08    ;8ms
0B7E  BDF800                  JSR     GWAIT   ;Temporisation  
                      
0B81  BDF406                  JSR     DIS_MEM ;Saut vers routine DIS_MEM (Affiche adresse et donnée envoyée)
                              
0B84  3502                    PULS    A       ;Restaure A (Compteur de groupes)
                              
0B86  4A                      DECA            ;Décremente A (Compteur d'octets)
                              
0B87  3504                    PULS    B       ;Restaure B pour le remettre au nombre d'octets initial
                              
0B89  26E6            FLOOPEXE        BNE     DLOOPEXE        ;Si <> 0, Réentrer en boucle de 32 groupes
                      
0B8B  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                              
                      ;************************************************************************************
                      ;Routine PROGLOAD: Load program into given adress (and execute it)
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: INPTADDR, OUTSTRNG, INPTHEX1, INPTHEX2, INPTHEX3, INPTHEX4
                      ;               BULDADDR, BULDDATA, EXECPROG
                      ;************************************************************************************
0B8C  3412            PROGLOAD        PSHS    A,X     ;sauvegarder les registres utilisés
                      
0B8E  8E024D                  LDX     #STRTADDR       ;message entrée adresse début
0B91  17FDB4                  LBSR    INPTADDR        ;demande saisie adresse
                              
0B94  9E83                    LDX     <TEMPADDR       ;sauvegarder adresse construire dans variable dédiée
0B96  9F8E                    STX     <SAVXINDX       ;sauvegarder adresse départ pour éxecution ultérieure
                              
0B98  3410                    PSHS    X       ;sauvegarder X (adresse début)
                              
0B9A  17FCBB                  LBSR    OUTCRLF ;retour à la ligne suivante
                                      
0B9D  8E029F                  LDX     #MESSDATA       ;message entrée donnée
0BA0  17FCE5                  LBSR    OUTSTRNG        ;afficher message d'entrée d'adresse
                              
0BA3  3510                    PULS    X       ;restaurer X (adresse début)
                              
0BA5  17FCB0          INPUTHEX        LBSR    OUTCRLF 
                      
0BA8  9F81                    STX     <TEMP2CHR       ;X -< adresse programme coutante
0BAA  17FD19                  LBSR    OUTHEXAW        ;afficher adresse courante
0BAD  17FC9E                  LBSR    OUTSPACE        ;plus un espace
                              
0BB0  17FC51                  LBSR    INPTHEX1        ;demande saisie donnée (octet) et construire la donnée
                                              ;à partir des caractères hexa entrés
                              
0BB3  9685                    LDA     <TEMPHEX1
0BB5  810D                    CMPA    #$0D    ;compare with CR
0BB7  270C                    BEQ     EXECUTPRG       ;si "CR", aller executer le programme
                              
0BB9  17FC51                  LBSR    INPTHEX2
                              
0BBC  17FD7E                  LBSR    BULDDATA
                              
0BBF  9680                    LDA     <TEMPCHAR       ;sauvegarder donnée construire dans variable dédiée
                              
0BC1  A780                    STA     ,X+     ;et le transférer dans l'adresse programme courante, incrémenter index
                              
0BC3  20E0                    BRA     INPUTHEX        ;sinon, aller saisir nouvel octet programme
                                      
0BC5  BE018E          EXECUTPRG       LDX     SAVXINDX
                      
0BC8  AD84                    JSR     ,X      ;sauter à sous routine dont l'adresse est contenue dans X
                              
0BCA  3512                    PULS    A,X     ;restaurer les registres utilisés
                              
0BCC  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************
                      ;Routine EXECPROG Execute program in specified adress
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée: INPTADDR, OUTSTRNG, INPTHEXA, BULDADDR
                      ;************************************************************************************
0BCD  3410            EXECPROG        PSHS    X       ;sauvegarder registre utilisé
                              
0BCF  8E0294                  LDX     #ADDRMESS
0BD2  17FD73                  LBSR    INPTADDR
                              
0BD5  9E83                    LDX     <TEMPADDR
                              
0BD7  17FC7E                  LBSR    OUTCRLF
                              
0BDA  AD84                    JSR     ,X
                              
0BDC  3510                    PULS    X       ;restaurer registre utilisé
                              
0BDE  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;************************************************************************************   
                      ;routines et programmes du nouveau assembleur ASSMSILIC et ses routines complémentaires        
                      ;------------------------------------------------------------------------------------
                      
                      ;************************************************************************************
                      ;Routine ASSEMBLE, Simple inline assembler for SILICONAL Kit
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée:
                      ;************************************************************************************
0BDF  3432            ASSEMBLE        PSHS    A,X,Y   ;sauvegarder les registres utilisés
                              
0BE1  108E0F00                LDY     #$0F00  ;index table op. codes
                              
0BE5  8E01E0          LOOPASSM        LDX     #BUFFERST       ;index X pointe sur zone mémoire BUFFERST
                              
0BE8  17F887          ASSEMBLE1       LBSR    RECVACIA        ;lecture Caractère
0BEB  17F86B                  LBSR    SENDACIA        ;ecriture caractère reçu
                              
0BEE  3402                    PSHS    A
0BF0  810D                    CMPA    #$0D    ;caractère reçu = "Chariot Return"?
                              ;BEQ    ASSEMBLE2       ;si oui aller à ASSEMBLE2: saisir et tester caractère suivant
0BF2  3502                    PULS    A
0BF4  2708                    BEQ     ASSEMBLE3       ;si oui aller à ASSEMBLE3: charger caractère $00
                              
0BF6  811B                    CMPA    #$1B
0BF8  270F                    BEQ     EXITASMBL
                              
0BFA  A780                    STA     ,X+     ;sinon (caractère normal) le charger dans BUFFERST
                              
0BFC  20EA                    BRA     ASSEMBLE1       ;aller lire caractère suivant
                              
                      ;ASSEMBLE2      STA     <TEMPCHAR       ;sauvegarder premier caractère (CR) pour utilisation ultérieure
                              
                              ;LBSR   RECVACIA        ;lecture Caractère
                              ;LBSR   SENDACIA        ;ecriture caractère reçu
                              ;STA    <TEMP2CHR       ;sauvegarder premier caractère (CR) pour utilisation ultérieure
                              
                              ;CMPA   #$0A    ;caractère reçu = "Line Feed"?
                              ;BEQ    ASSEMBLE3       ;si oui aller à ASSEMBLE3: charger caractère $00 dans BUFFERST
                              
                              ;LDA    <TEMPCHAR       ;sinon (caractère normal), charger caractère "CR"  
                              ;STA    ,X+     ;dans BUFFERST puisque caractère suivant est <> de "LF"        
                              
                              ;LDA    <TEMP2CHR       ;charger caractère (normal) suivant le caractère "CR"
                              ;STA    ,X+     ;dans BUFFERST puisque caractère suivant "CR" est <> de "LF"
                              
                              ;BRA    ASSEMBLE1       ;aller lire caractère suivant
                              
0BFE  8600            ASSEMBLE3       LDA     #$00    ;charger caractère $00 (caractère 0 terminal)
0C00  A784                    STA     ,X      ;dans BUFFERST
                              
0C02  8D39                    BSR     CONVISNT        ;convertir instruction saisie
                              
0C04  17FC51                  LBSR    OUTCRLF ;retourner à la ligne suivante et
                              
0C07  20DC                    BRA     LOOPASSM         ;revenir à LOOPASSM pour saisir une nouvelle instruction
                              
0C09  3532            EXITASMBL       PULS    A,X,Y   ;restaurer les registres utilisés
                              
0C0B  39                      RTS             ;Fin de sous routine et retour au programme appelant
                      ;____________________________________________________________________________________
                              
                              
                      ;************************************************************************************
                      ;Routine CONVISNT Convert instruction to op. code
                      ;Entrée: BUFFERST=Commande reçue par RS232
                      ;Sorties: 
                      ;Routines appelée: OUTSTRNG
                      ;************************************************************************************
0C0C  496E7374722E206E6F6E207472762100 ERINSMES        FCC     "Instr. non trv!", $00  ;mess. fin de table commandes atteint
0C1C  4D6465206164722E20696E6473702100 ERRMDADD        FCC     "Mde adr. indsp!", $00  ;mess. mode adressage non disp.
0C2C  496E64657820696E636F72726563742100 ERINXMES        FCC     "Index incorrect!",$00  ;mess. index utilisé est incorrect
                      
0C3D  3416            CONVISNT        PSHS    A,B,X   ;sauvegarder les registres utilisés
                      
0C3F  8E0F10                  LDX     #INSTTABL       ;charger X avec première entrée de la table instructions
                              
0C42  A680            COMPINST        LDA     ,X+     ;A<-entrée de table instructions puis incrémenter index
                              
0C44  B101E0                  CMPA    BUFFERST        ;comparer première lettre instr. saisie avec entrée de table instr.
0C47  2711                    BEQ     COMP2NDL        ;si égale, aller comparer seconde lettre       
                      
0C49  8100                    CMPA    #$00    ;si non égal, test fin de table instructions
0C4B  2609                    BNE     CTRLBYT1        ;pas encore atteinte
                              
0C4D  8E0C0C                  LDX     #ERINSMES       ;si fin de table atteinte, préparer message d'erreur
0C50  17FC35                  LBSR    OUTSTRNG        ;afficher message d'erreur "Instruction non trouvée!"
                              
0C53  1602B7                  LBRA    RSTREXIT        ;aller restaurer registres et sortir
                      
0C56  3003            CTRLBYT1        LEAX    3,X     ;incrémenter index pour atteindre octet de contrôle modes adressage
0C58  2044                    BRA     NXTENTRY
                              
0C5A  A680            COMP2NDL        LDA     ,X+     ;A<-entrée de table instructions puis incrémenter index
0C5C  B101E1                  CMPA    BUFFERST+1;comparer 2 eme lettre instr. avec entrée de table instr.
0C5F  2711                    BEQ     COMP3RDL        ;si égale, aller comparer 3eme lettre  
                      
0C61  8100                    CMPA    #$00    ;si non égal, test fin de table instructions
0C63  2609                    BNE     CTRLBYT2        ;pas encore atteinte
                              
0C65  8E0C0C                  LDX     #ERINSMES       ;si fin de table atteinte, préparer message d'erreur
0C68  17FC1D                  LBSR    OUTSTRNG        ;afficher message d'erreur "Instruction non trouvée!"
                              
0C6B  16029F                  LBRA    RSTREXIT        ;aller restaurer registres et sortir
                              
0C6E  3002            CTRLBYT2        LEAX    2,X     ;incrémenter index pour atteindre octet de contrôle modes adressage
0C70  202C                    BRA     NXTENTRY
                              
0C72  A680            COMP3RDL        LDA     ,X+     ;A<-entrée de table instructions puis incrémenter index
0C74  B101E2                  CMPA    BUFFERST+2;comparer 3 eme lettre instr. avec entrée de table instr.
0C77  2711                    BEQ     COMP4THL
                              
0C79  8100                    CMPA    #$00    ;si non égal, test fin de table instructions
0C7B  2609                    BNE     CTRLBYT3        ;pas encore atteinte
                              
0C7D  8E0C0C                  LDX     #ERINSMES       ;si fin de table atteinte, préparer message d'erreur
0C80  17FC05                  LBSR    OUTSTRNG        ;afficher message d'erreur "Instruction non trouvée!"
                              
0C83  160287                  LBRA    RSTREXIT        ;aller restaurer registres et sortir
                              
0C86  3001            CTRLBYT3        LEAX    1,X     ;incrémenter index pour atteindre octet de contrôle modes adressage
0C88  2014                    BRA     NXTENTRY
                      
0C8A  A680            COMP4THL        LDA     ,X+     ;A<-entrée de table instructions puis incrémenter index
0C8C  B101E3                  CMPA    BUFFERST+3;comparer 4 eme lettre instr. avec entrée de table instr.
0C8F  272B                    BEQ     EXECCONV
                              
0C91  8100                    CMPA    #$00    ;si non égal, test fin de table instructions
0C93  2609                    BNE     NXTENTRY        ;pas encore atteinte
                              
0C95  8E0C0C                  LDX     #ERINSMES       ;si fin de table atteinte, préparer message d'erreur
0C98  17FBED                  LBSR    OUTSTRNG        ;afficher message d'erreur "Instruction non trouvée!"
                              
0C9B  16026F                  LBRA    RSTREXIT        ;aller restaurer registres et sortir
                              
                      ;calcul adresse nouvelle entrée instruction dans table instructions
0C9E  5F              NXTENTRY        CLRB            ;mise à 0 du compteur de modes d'adressage disponibles
                              
0C9F  A680                    LDA     ,X+
0CA1  48                      ASLA            ;isolation indicateur mode adressage Immédiat
0CA2  2401                    BCC     ADDRMOD1        ;si indicateur mode adressage Immédiat non actif       
0CA4  5C                      INCB            ;incrémenter compteur modes d'adressage        
                      
0CA5  48              ADDRMOD1        ASLA            ;isolation indicateur mode adressage Direct
0CA6  2401                    BCC     ADDRMOD2        ;si indicateur mode adressage Direct non actif          
0CA8  5C                      INCB            ;incrémenter compteur modes d'adressage
                      
0CA9  48              ADDRMOD2        ASLA            ;isolation indicateur mode adressage Indéxé   
0CAA  2401                    BCC     ADDRMOD3        ;si indicateur mode adressage Indéxé non actif                
0CAC  5C                      INCB            ;incrémenter compteur modes d'adressage        
                      
0CAD  48              ADDRMOD3        ASLA            ;isolation indicateur mode adressage Etendu     
0CAE  2401                    BCC     ADDNXTIN        ;si indicateur mode adressage Etendu non actif          
0CB0  5C                      INCB            ;incrémenter compteur modes d'adressage
                              
0CB1  C100            ADDNXTIN        CMPB    #$00    ;test nombre modes d'adressage
0CB3  2602                    BNE     MOVNXTIN        ;si <> 0, donc continuer
0CB5  C601                    LDB     #$01    ;si aucun mode d'adressage, donc mode Inhérent seul
                      
0CB7  3085            MOVNXTIN        LEAX    B,X     ;X <- adresse prochaine entrée dans la table instructions
                              
0CB9  16FF86                  LBRA    COMPINST        ;aller comparer l'instruction saisie avec cette entrée
                      
0CBC  5F              EXECCONV        CLRB            ;mise à 0 d'un compteur de modes d'adressage indisponibles
                              
0CBD  A684                    LDA     ,X      ;A <- X (adresse mot de controle des modes disponibles)
                              
0CBF  48                      ASLA            ;isolation indicateur mode adressage Immédiat
0CC0  2505                    BCS     CONTINUE        ;si indicateur mode adressage Immédiat inactif, incrémenter B 
0CC2  5A                      DECB            ;incrémenter compteur de modes adressage indisponibles
                              
0CC3  48                      ASLA            ;isolation indicateur mode adressage Direct
0CC4  2501                    BCS     CONTINUE        ;si indicateur mode adressage Immédiat inactif, incrémenter B 
0CC6  5A                      DECB            ;incrémenter compteur de modes adressage indisponibles
                              
0CC7  96E5            CONTINUE        LDA     <BUFFERST+5
                      
0CC9  8123                    CMPA    #'#     ;test caractère suivant l'espace si c'est "#"
0CCB  2713                    BEQ     IMMEDIAT        ;donc mode adressage Immédiat
                              
0CCD  8124                    CMPA    #'$     ;sinon le comparer avec "$"
0CCF  2749                    BEQ     TSTDRECT        ;si égal donc aller tester si Direct ou Etendu
                              
0CD1  812C                    CMPA    #',     ;si <> "$" comparer avec ","
0CD3  1027008A                LBEQ    INDEXNUL        ;si égal donc mode adressage Indéxé déplacement nul
                              
0CD7  8100                    CMPA    #$00    ;test caractère suivant l'espace si c'est $00
0CD9  102701F8                LBEQ    INHERENT        ;donc mode adressage Inhérent
                              
0CDD  1600EF                  LBRA    INDXOFFS        
                      
                      ;-----------------------------------------------------------------------------------
                      ;traitement de l'assemblage du mode d'adressage Immédiat
                      ;-----------------------------------------------------------------------------------
0CE0                  IMMEDIAT        ;vérification si ce mode est disponible pour cette instruction
0CE0  A680                    LDA     ,X+
0CE2  48                      ASLA            ;isolation indicateur mode adressage Immédiat, et incrémentation X
0CE3  10240220                LBCC    ERRMODIM        ;si indicateur mode adressage Immédiat non actif       
                              
0CE7  A684                    LDA     ,X      ;si oui, copier le code dans zone mémoire Op Code              
0CE9  A7A4                    STA     ,Y      ;indéxée par Y
                              
                              ;début test affichage adresse copie Op Code
0CEB  109F81                  STY     <TEMP2CHR       ;mettre adresse début dans variable
                              
0CEE  17FBD5                  LBSR    OUTHEXAW
                              
0CF1  17FB80                  LBSR    OUTDASH ;retour nouvelle ligne
0CF4  17FB4D                  LBSR    OUTPRMPT
                              
0CF7  3121                    LEAY    1,Y      ;incrémenter Y
                              ;fin test affichage adresse copie Op Code
                              
0CF9  9780                    STA     <TEMPCHAR       
0CFB  17FB9A                  LBSR    OUTHEXAB        ;afficher code opération assemblé
                              
0CFE  96E7                    LDA     <BUFFERST+7;A <- nibble suppérieur de la valeur immédiate
0D00  9780                    STA     <TEMPCHAR       
0D02  17FB23                  LBSR    OUT1CHAR;afficher nibble supérieur de la valeur immédiate
                              
0D05  96E8                    LDA     <BUFFERST+8;A <- nibble inférieur de la valeur immédiate
0D07  9780                    STA     <TEMPCHAR       
0D09  17FB1C                  LBSR    OUT1CHAR        ;afficher nibble inférieur de la valeur immédiate
                              
0D0C  96E7                    LDA     <BUFFERST+7;A <- nibble suppérieur de la valeur immédiate
0D0E  D6E8                    LDB     <BUFFERST+8;B <- nibble inférieur de la valeur immédiate
0D10  17FBF2                  LBSR    BULDBYTE        ;construction de l'octet à partir des deux nibbles     
0D13  9680                    LDA     <TEMPCHAR       ;récupération du l'octet construit
0D15  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
                              
0D17  1601F3                  LBRA    RSTREXIT        ;aller vers restauration registres et exit
                              
0D1A  96E8            TSTDRECT        LDA     <BUFFERST+8
0D1C  8100                    CMPA    #$00
0D1E  1026015A                LBNE    EXTENDED
                              
                      ;-----------------------------------------------------------------------------------
                      ;traitement de l'assemblage du mode d'adressage Direct
                      ;-----------------------------------------------------------------------------------
0D22                  DIRECT  ;vérification si ce mode est disponible pour cette instruction
0D22  A680                    LDA     ,X+     ;incrémentation pour tomber sur l'op. code Direct
0D24  48                      ASLA            ;isolation indicateur mode adressage Immédiat
0D25  48                      ASLA            ;isolation indicateur mode adressage Direct, et incrémentation X
0D26  102401DD                LBCC    ERRMODIM        ;si indicateur mode adressage Immédiat non actif       
                              
0D2A  3001                    LEAX    1,X     ;incrémentation pour tomber sur l'op. code Direct
                              
0D2C  3085                    LEAX    B,X     ;déduire le nombre de modes indisponible de X pour commencer
                                              ;à partir du 1er mode disponible
0D2E  A684                    LDA     ,X      ;si oui, copier le code dans zone mémoire Op Code              
0D30  A7A4                    STA     ,Y      ;indéxée par Y
                              
                              ;début test affichage adresse copie Op Code
0D32  109F81                  STY     <TEMP2CHR       ;mettre adresse début dans variable
                              
0D35  17FB8E                  LBSR    OUTHEXAW
                              
0D38  17FB39                  LBSR    OUTDASH ;retour nouvelle ligne
0D3B  17FB06                  LBSR    OUTPRMPT
                              
0D3E  3121                    LEAY    1,Y      ;incrémenter Y
                              ;fin test affichage adresse copie Op Code
                              
0D40  9780                    STA     <TEMPCHAR       
0D42  17FB53                  LBSR    OUTHEXAB        ;afficher code opération assemblé
                              
0D45  96E6                    LDA     <BUFFERST+6;A <- nibble suppérieur de l'adresse directe
0D47  9780                    STA     <TEMPCHAR       
0D49  17FADC                  LBSR    OUT1CHAR        ;afficher nibble supérieur de l'adresse directe
                              
0D4C  96E7                    LDA     <BUFFERST+7;A <- nibble inférieur de l'adresse directe
0D4E  9780                    STA     <TEMPCHAR       
0D50  17FAD5                  LBSR    OUT1CHAR        ;afficher nibble inférieur de l'adresse directe
                              
0D53  96E6                    LDA     <BUFFERST+6;A <- nibble suppérieur de la valeur immédiate
0D55  D6E7                    LDB     <BUFFERST+7;B <- nibble inférieur de la valeur immédiate
0D57  17FBAB                  LBSR    BULDBYTE        ;construction de l'octet à partir des deux nibbles     
0D5A  9680                    LDA     <TEMPCHAR       ;récupération du l'octet construit
0D5C  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
                                      
0D5E  1601AC                  LBRA    RSTREXIT        ;aller vers restauration registres et exit
                      
                      ;-----------------------------------------------------------------------------------
                      ;traitement de l'assemblage du mode d'adressage Indexé déplacement nul
                      ;-----------------------------------------------------------------------------------    
0D61                  INDEXNUL        ;vérification si ce mode est disponible pour cette instruction
0D61  A680                    LDA     ,X+     
0D63  48                      ASLA            ;isolation indicateur mode adressage Immédiat
0D64  48                      ASLA            ;isolation indicateur mode adressage Direct
0D65  48                      ASLA            ;isolation indicateur mode adressage Indéxé, et incrémentation X
0D66  1024019D                LBCC    ERRMODIM        ;si indicateur mode adressage Immédiat non actif       
                              
0D6A  3002                    LEAX    2,X     ;2 incrémentations de X pour tomber sur l'op.code Indéxé
                              
0D6C  3085                    LEAX    B,X     ;déduire le nombre de modes indisponible de X pour commencer
                                              ;à partir du 1er mode disponible
0D6E  A684                    LDA     ,X      ;si oui, copier le code dans zone mémoire Op Code              
0D70  A7A4                    STA     ,Y      ;indéxée par Y
                              
                              ;début test affichage adresse copie Op Code
0D72  109F81                  STY     <TEMP2CHR       ;mettre adresse début dans variable
                              
0D75  17FB4E                  LBSR    OUTHEXAW
                              
0D78  17FAF9                  LBSR    OUTDASH ;retour nouvelle ligne
0D7B  17FAC6                  LBSR    OUTPRMPT
                              
0D7E  3121                    LEAY    1,Y      ;incrémenter Y
                              ;fin test affichage adresse copie Op Code
                              
0D80  9780                    STA     <TEMPCHAR       
0D82  17FB13                  LBSR    OUTHEXAB        ;afficher code opération assemblé
                              
                      ;traitement décodage Post Byte offset nul
0D85  96E6                    LDA     <BUFFERST+6;extraction index utilisé dans l'instruction        
0D87  8158                    CMPA    #'X     ;comparer avec X
0D89  260C                    BNE     TSTINDXY
                              
0D8B  8684                    LDA     #$84
0D8D  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
0D8F  9780                    STA     <TEMPCHAR       
0D91  17FB04                  LBSR    OUTHEXAB        ;afficher Post Byte de l'index X
                              
0D94  160176                  LBRA    RSTREXIT        ;aller vers restauration registres et exit
                      
0D97  96E6            TSTINDXY        LDA     <BUFFERST+6;extraction index utilisé dans l'instruction
0D99  8159                    CMPA    #'Y
0D9B  260C                    BNE     TSTINDXU
                              
0D9D  86A4                    LDA     #$A4
0D9F  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
0DA1  9780                    STA     <TEMPCHAR       
0DA3  17FAF2                  LBSR    OUTHEXAB        ;afficher Post Byte de l'index U
                              
0DA6  160164                  LBRA    RSTREXIT        ;aller vers restauration registres et exit
                      
0DA9  96E6            TSTINDXU        LDA     <BUFFERST+6;extraction index utilisé dans l'instruction
0DAB  8155                    CMPA    #'U
0DAD  260C                    BNE     TSTINDXS
                              
0DAF  86C4                    LDA     #$C4
0DB1  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
0DB3  9780                    STA     <TEMPCHAR       
0DB5  17FAE0                  LBSR    OUTHEXAB        ;afficher Post Byte de l'index X
                              
0DB8  160152                  LBRA    RSTREXIT        ;aller vers restauration registres et exit
                      
0DBB  96E6            TSTINDXS        LDA     <BUFFERST+6;extraction index utilisé dans l'instruction
0DBD  8153                    CMPA    #'S
0DBF  10260139                LBNE    ERRINDEX
                              
0DC3  86E4                    LDA     #$E4
0DC5  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
0DC7  9780                    STA     <TEMPCHAR       
0DC9  17FACC                  LBSR    OUTHEXAB        ;afficher Post Byte de l'index X
                              
0DCC  16013E                  LBRA    RSTREXIT        ;aller vers restauration registres et exit
                      
                      ;-----------------------------------------------------------------------------------
                      ;traitement de l'assemblage du mode d'adressage Indexé déplacement non nul
                      ;-----------------------------------------------------------------------------------
0DCF                  INDXOFFS        ;vérification si ce mode est disponible pour cette instruction
0DCF  A680                    LDA     ,X+     
0DD1  48                      ASLA            ;isolation indicateur mode adressage Immédiat
0DD2  48                      ASLA            ;isolation indicateur mode adressage Direct
0DD3  48                      ASLA            ;isolation indicateur mode adressage Indéxé, et incrémentation X
0DD4  1024012F                LBCC    ERRMODIM        ;si indicateur mode adressage Immédiat non actif       
                              
0DD8  3002                    LEAX    2,X     ;2 incrémentations de X pour tomber sur l'op.code Indéxé
                              
0DDA  3085                    LEAX    B,X     ;déduire le nombre de modes indisponible de X pour commencer
                                              ;à partir du 1er mode disponible
0DDC  A684                    LDA     ,X      ;si oui, copier le code dans zone mémoire Op Code              
0DDE  A7A4                    STA     ,Y      ;indéxée par Y
                              
                              ;début test affichage adresse copie Op Code
0DE0  109F81                  STY     <TEMP2CHR       ;mettre adresse début dans variable
                              
0DE3  17FAE0                  LBSR    OUTHEXAW
                              
0DE6  17FA8B                  LBSR    OUTDASH ;retour nouvelle ligne
0DE9  17FA58                  LBSR    OUTPRMPT
                              
0DEC  3121                    LEAY    1,Y      ;incrémenter Y
                              ;fin test affichage adresse copie Op Code
                              
0DEE  9780                    STA     <TEMPCHAR       
0DF0  17FAA5                  LBSR    OUTHEXAB        ;afficher code opération assemblé
                      
                      ;traitement décodage Post Byte mode indexé deplacement non nul
0DF3  96E6                    LDA     <BUFFERST+6;extraction caractère mode indexé deplacement non nul      
0DF5  812C                    CMPA    #',     ;comparer avec ","
0DF7  1026007E                LBNE    INCDECPC        ;aller traiter les modes indexé auto-ncrémenté/decrémenté, relatif PC
                              
                      ;tester le mode de deplacement autre que indexé nul à partir du caractère dans l'instruction
0DFB  96E5                    LDA     <BUFFERST+5;extraction deplacement utilisé dans l'instruction  
0DFD  8130                    CMPA    #'0     ;comparer avec X
0DFF  2D04                    BLT     TSTACDEP        ;aller traiter deplacement Accumulateur 
                              
0E01  8139                    CMPA    #'9     ;comparer avec X
0E03  2F71                    BLE     TSTDEPCT        ;aller tester deplacement constant
                              
                      ;-----------------------------------------------------------------------------------
                      ;traitement de l'assemblage du mode d'adressage Indexé déplacement accumulateur
                      ;-----------------------------------------------------------------------------------
                      ;test accumulateur deplacement et détermination LSB du Post Byte
0E05  8141            TSTACDEP        CMPA    #'A
0E07  270B                    BEQ     DEPACCUA
                              
0E09  8142                    CMPA    #'B
0E0B  270D                    BEQ     DEPACCUB
                              
0E0D  8144                    CMPA    #'D
0E0F  270F                    BEQ     DEPACCUD
                              
0E11  1600E8                  LBRA    ERRINDEX
                      
0E14  8606            DEPACCUA        LDA     #$06
0E16  9780                    STA     <TEMPCHAR
0E18  200A                    BRA     TSTINDX
                              
0E1A  8605            DEPACCUB        LDA     #$05
0E1C  9780                    STA     <TEMPCHAR
0E1E  2004                    BRA     TSTINDX
                              
0E20  860B            DEPACCUD        LDA     #$0B
0E22  9780                    STA     <TEMPCHAR       
                              
                      ;test index pour determiner MSB du Post Byte
0E24  96E7            TSTINDX LDA     <BUFFERST+7;extraction index utilisé dans l'instruction
0E26  8158                    CMPA    #'X
0E28  260E                    BNE     TSTINDY
                              
0E2A  8680                    LDA     #$80
0E2C  9B80                    ADDA    <TEMPCHAR       
0E2E  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
0E30  9780                    STA     <TEMPCHAR
0E32  17FA63                  LBSR    OUTHEXAB        ;afficher Post Byte de l'index X
                              
0E35  1600D5                  LBRA    RSTREXIT        ;aller vers restauration registres et exit
                              
                      ;test index utilisé pour déterminer le Post Byte
0E38  96E7            TSTINDY LDA     <BUFFERST+7;extraction index utilisé dans l'instruction
0E3A  8159                    CMPA    #'Y
0E3C  260E                    BNE     TSTINDU
                              
0E3E  86A0                    LDA     #$A0
0E40  9B80                    ADDA    <TEMPCHAR       
0E42  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
0E44  9780                    STA     <TEMPCHAR
0E46  17FA4F                  LBSR    OUTHEXAB        ;afficher Post Byte de l'index U
                              
0E49  1600C1                  LBRA    RSTREXIT        ;aller vers restauration registres et exit
                      
0E4C  96E7            TSTINDU LDA     <BUFFERST+7;extraction index utilisé dans l'instruction
0E4E  8155                    CMPA    #'U
0E50  260E                    BNE     TSTINDS
                              
0E52  86C0                    LDA     #$C0
0E54  9B80                    ADDA    <TEMPCHAR       
0E56  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
0E58  9780                    STA     <TEMPCHAR
0E5A  17FA3B                  LBSR    OUTHEXAB        ;afficher Post Byte de l'index X
                              
0E5D  1600AD                  LBRA    RSTREXIT        ;aller vers restauration registres et exit
                      
0E60  96E7            TSTINDS LDA     <BUFFERST+7;extraction index utilisé dans l'instruction
0E62  8153                    CMPA    #'S
0E64  10260094                LBNE    ERRINDEX
                              
0E68  86E0                    LDA     #$E0
0E6A  9B80                    ADDA    <TEMPCHAR
0E6C  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
0E6E  9780                    STA     <TEMPCHAR       
0E70  17FA25                  LBSR    OUTHEXAB        ;afficher Post Byte de l'index X        
                              
0E73  160097                  LBRA    RSTREXIT        ;aller vers restauration registres et exit
                      
                      ;-----------------------------------------------------------------------------------
                      ;traitement de l'assemblage du mode d'adressage Indexé déplacement constant
                      ;-----------------------------------------------------------------------------------
                      ;test indexé à déplacement constant
0E76  160094          TSTDEPCT        LBRA    RSTREXIT        ;aller vers restauration registres et exit
                      
                      ;-----------------------------------------------------------------------------------
                      ;traitement de l'assemblage du mode d'adressage Indexé auto-ncrémenté/decrémenté, relatif PC
                      ;-----------------------------------------------------------------------------------
                      ;traiter les modes indexé auto-ncrémenté/decrémenté, relatif PC
0E79  160091          INCDECPC        LBRA    RSTREXIT        ;aller vers restauration registres et exit
                      
                      ;-----------------------------------------------------------------------------------
                      ;traitement de l'assemblage du mode d'adressage Etendu
                      ;-----------------------------------------------------------------------------------    
0E7C                  EXTENDED        ;vérification si ce mode est disponible pour cette instruction
0E7C  A680                    LDA     ,X+
0E7E  48                      ASLA            ;isolation indicateur mode adressage Immédiat
0E7F  48                      ASLA            ;isolation indicateur mode adressage Direct
0E80  48                      ASLA            ;isolation indicateur mode adressage Indéxé
0E81  48                      ASLA            ;isolation indicateur mode adressage Etendu, et incrémentation X
0E82  10240081                LBCC    ERRMODIM        ;si indicateur mode adressage Immédiat non actif       
                              
0E86  3003                    LEAX    3,X     ;puis 2 autres incrémentation de X pour tomber sur l'op.code Etendu
                              
0E88  3085                    LEAX    B,X     ;déduire le nombre de modes indisponible de X pour commencer
                                              ;à partir du 1er mode disponible       
0E8A  A684                    LDA     ,X      ;si oui, copier le code dans zone mémoire Op Code              
0E8C  A7A4                    STA     ,Y      ;indéxée par Y
                              
                              ;début test affichage adresse copie Op Code
0E8E  109F81                  STY     <TEMP2CHR       ;mettre adresse début dans variable
                              
0E91  17FA32                  LBSR    OUTHEXAW
                              
0E94  17F9DD                  LBSR    OUTDASH ;retour nouvelle ligne
0E97  17F9AA                  LBSR    OUTPRMPT
                              
0E9A  3121                    LEAY    1,Y      ;incrémenter Y
                              ;fin test affichage adresse copie Op Code
                              
0E9C  9780                    STA     <TEMPCHAR       
0E9E  17F9F7                  LBSR    OUTHEXAB        ;afficher code opération assemblé
                              
0EA1  96E6                    LDA     <BUFFERST+6;A <- nibble suppérieur du MSB de l'adresse étendue
0EA3  9780                    STA     <TEMPCHAR       
0EA5  17F980                  LBSR    OUT1CHAR        ;afficher nibble supérieur du MSB de l'adresse étendue
                              
0EA8  96E7                    LDA     <BUFFERST+7;A <- nibble inférieur du MSB de l'adresse étendue
0EAA  9780                    STA     <TEMPCHAR       
0EAC  17F979                  LBSR    OUT1CHAR        ;afficher nibble inférieur du MSB de l'adresse étendue
                              
0EAF  96E8                    LDA     <BUFFERST+8;A <- nibble suppérieur du LSB de l'adresse étendue
0EB1  9780                    STA     <TEMPCHAR       
0EB3  17F972                  LBSR    OUT1CHAR        ;afficher nibble supérieur du LSB de l'adresse étendue
                              
0EB6  96E9                    LDA     <BUFFERST+9;A <- nibble inférieur du LSB de l'adresse étendue
0EB8  9780                    STA     <TEMPCHAR       
0EBA  17F96B                  LBSR    OUT1CHAR        ;afficher nibble inférieur du LSB de l'adresse étendue
                              
0EBD  96E6                    LDA     <BUFFERST+6;A <- nibble suppérieur de la valeur étendue
0EBF  D6E7                    LDB     <BUFFERST+7;B <- nibble inférieur de la valeur étendue
0EC1  17FA41                  LBSR    BULDBYTE        ;construction de l'octet à partir des deux nibbles     
0EC4  9680                    LDA     <TEMPCHAR       ;récupération du l'octet construit
0EC6  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
                              
0EC8  96E8                    LDA     <BUFFERST+8;A <- nibble suppérieur de la valeur étendue
0ECA  D6E9                    LDB     <BUFFERST+9;B <- nibble inférieur de la valeur étendue
0ECC  17FA36                  LBSR    BULDBYTE        ;construction de l'octet à partir des deux nibbles     
0ECF  9680                    LDA     <TEMPCHAR       ;récupération du l'octet construit
0ED1  A7A0                    STA     ,Y+     ;copier octet vers mémoire indéxée par Y et incrémenter Y
                              
0ED3  2038                    BRA     RSTREXIT        ;aller vers restauration registres et exit
                      
                      ;-----------------------------------------------------------------------------------
                      ;traitement de l'assemblage du mode d'adressage Inhérent
                      ;-----------------------------------------------------------------------------------    
0ED5                  INHERENT        ;vérification si ce mode est disponible pour cette instruction
0ED5  A680                    LDA     ,X+
0ED7  48                      ASLA            ;isolation indicateur mode adressage Immédiat
0ED8  252D                    BCS     ERRMODIM        ;si indicateur mode adressage Immédiat actif, Erreur mode indisp.      
0EDA  48                      ASLA            ;isolation indicateur mode adressage Direct
0EDB  252A                    BCS     ERRMODIM        ;si indicateur mode adressage Immédiat actif, Erreur mode indisp.      
0EDD  48                      ASLA            ;isolation indicateur mode adressage Indéxé
0EDE  2527                    BCS     ERRMODIM        ;si indicateur mode adressage Immédiat actif, Erreur mode indisp.      
0EE0  48                      ASLA            ;isolation indicateur mode adressage Etendu, et incrémentation X
0EE1  2524                    BCS     ERRMODIM        ;si indicateur mode adressage Immédiat actif, Erreur mode indisp.      
                              
0EE3  A684                    LDA     ,X      ;si oui, copier le code dans zone mémoire Op Code              
0EE5  A7A4                    STA     ,Y      ;indéxée par Y
                              
                              ;début test affichage adresse copie Op Code
0EE7  109F81                  STY     <TEMP2CHR       ;mettre adresse début dans variable
                              
0EEA  17F9D9                  LBSR    OUTHEXAW
                              
0EED  17F984                  LBSR    OUTDASH ;retour nouvelle ligne
0EF0  17F951                  LBSR    OUTPRMPT
                              
0EF3  3121                    LEAY    1,Y      ;incrémenter Y
                              ;fin test affichage adresse copie Op Code
                              
0EF5  9780                    STA     <TEMPCHAR       
0EF7  17F99E                  LBSR    OUTHEXAB        ;afficher code opération assemblé
                              ;LBSR   OUTCRLF ;et retourner à la ligne
                              
0EFA  2011                    BRA     RSTREXIT        ;aller vers restauration registres et exit
                      
                      ;traitement erreur index dans le mode d'adressage indexé
0EFC  17F959          ERRINDEX        LBSR    OUTCRLF ;retourner à la ligne suivante et
0EFF  8E0C2C                  LDX     #ERINXMES       ;si aucun index (X,Y,U ou S) existant dans l'instruction
0F02  17F983                  LBSR    OUTSTRNG        ;afficher message d'erreur "Index incorrect!"
                              
0F05  2006                    BRA     RSTREXIT        ;aller vers restauration registres et exit
                      
                      ;traitement erreur de mode d'adressage  
0F07  8E0C1C          ERRMODIM        LDX     #ERRMDADD       ;sinon afficher message "Mode adressage non dispo."
0F0A  17F97B                  LBSR    OUTSTRNG        ;afficher message d'erreur "Mode adressage non dispo."
                              
0F0D  3516            RSTREXIT        PULS    A,B,X   ;restaurer les registres utilisés
                      
0F0F  39                      RTS             ;Fin de sous routine et retour au programme moniteur
                      ;____________________________________________________________________________________
                      
                      
                      ;début exemple codage conversion instruction
                              ;FCC    "STA "  ;instruction
                              ;FCC    %01110100       ;pattern adressage disp. nibble MSB: 1->disp. 0->indisp.
                                              ;bits: 7->Immediat, 6->Direct, 5->Indéxé, 4->Etendu
                                              ;mode Inhérent disponible si aucun autre mode n'est disp.
                                              ;nibble LSB: 3 bits MSB->nombre d'octets code operation
                                              ;dans cet exemple: modes d'adressage disponibles:
                                              ;Direct, Indéxé et Etendu. nombre d'octets Direct: 2
                                              
                              ;FCC    %10011000       ;ce bit est supplémentaire et ajouté en cas de besoin:
                                              ;si le nombre de modes d'adressage disponibles est > 1:
                                              ;bit 0 octet précédent + bits 7 et 6->nombre octets code
                                              ;operation adressage 1, bits 5 à 0-> par paquet de 3 bits
                                              ;->nombre octets code opération par même ordre que celui
                                              ;des bits de pattern des modes d'adressage
                                              ;dans cet exemple nombre d'octets Indéxé: 2, nombre d'octets
                                              ;Etendu: 3, les bits restant n'ont aucune signification
                                              ;puisqu'il n'y a que 3 modes d'adressage pour cette "STA"
                                              
                              ;FCC    $97     ;code operation par même ordre que celui des bits de
                              ;FCC    $A7     ;dans cet exemple: code opération mode Direct -> $97, code
                              ;FCC    $B7     ;pattern des modes d'adressage Immediat, Direct, Indéxé,
                                              ;Etendu puis Inhérent
                                              ;mode Indéxé -> $A7, code mode Etendu -> $B7
                      ;fin exemple codage conversion instruction
                      
0F10  41425820        INSTTABL        FCC     "ABX "  ;tables des instructions autres que les branchements (+ JMP et JSR)     
0F14  02                      FCC     %00000010                               
0F15  3A                      FCC     $3A              
                      
0F16  41444341                FCC     "ADCA"
0F1A  F4                      FCC     %11110100
                              ;FCC    %10010011
0F1B  89                      FCC     $89
0F1C  99                      FCC     $99
0F1D  A9                      FCC     $A9
0F1E  B9                      FCC     $B9
                              
0F1F  41444342                FCC     "ADCB"
0F23  F4                      FCC     %11110100
                              ;FCC    %10010011
0F24  C9                      FCC     $C9
0F25  D9                      FCC     $D9
0F26  E9                      FCC     $E9
0F27  F9                      FCC     $F9
                              
0F28  41444441                FCC     "ADDA"
0F2C  F4                      FCC     %11110100
                              ;FCC    %10010011
0F2D  8B                      FCC     $8B
0F2E  9B                      FCC     $9B
0F2F  AB                      FCC     $AB
0F30  BB                      FCC     $BB
                              
0F31  41444442                FCC     "ADDB"
0F35  F4                      FCC     %11110100
                              ;FCC    %10010011
0F36  CB                      FCC     $CB
0F37  DB                      FCC     $DB
0F38  EB                      FCC     $EB
0F39  FB                      FCC     $FB
                              
0F3A  41444444                FCC     "ADDD"
0F3E  F6                      FCC     %11110110
                              ;FCC    %10010011
0F3F  C3                      FCC     $C3
0F40  D3                      FCC     $D3
0F41  E3                      FCC     $E3
0F42  F3                      FCC     $F3
                              
0F43  414E4441                FCC     "ANDA"
0F47  F4                      FCC     %11110100
                              ;FCC    %10010011
0F48  84                      FCC     $84
0F49  94                      FCC     $94
0F4A  A4                      FCC     $A4
0F4B  B4                      FCC     $B4
                              
0F4C  414E4442                FCC     "ANDB"
0F50  F4                      FCC     %11110100
                              ;FCC    %10010011
0F51  C4                      FCC     $C4
0F52  D4                      FCC     $D4
0F53  E4                      FCC     $E4
0F54  F4                      FCC     $F4
                              
0F55  414E4443                FCC     "ANDC"
0F59  84                      FCC     %10000100
0F5A  1C                      FCC     $1C
                              
0F5B  41534C41                FCC     "ASLA"
0F5F  02                      FCC     %00000010
0F60  48                      FCC     $48
                              
0F61  41534C42                FCC     "ASLB"
0F65  02                      FCC     %00000010
0F66  58                      FCC     $58
                              
0F67  41534C20                FCC     "ASL "
0F6B  74                      FCC     %01110100
                              ;FCC    %10011000
0F6C  08                      FCC     $08
0F6D  68                      FCC     $68
0F6E  78                      FCC     $78
                              
0F6F  41535241                FCC     "ASRA"
0F73  02                      FCC     %00000010
0F74  47                      FCC     $47
                              
0F75  41535242                FCC     "ASRB"
0F79  02                      FCC     %00000010
0F7A  57                      FCC     $57
                              
0F7B  41535220                FCC     "ASR "
0F7F  74                      FCC     %01110100
                              ;FCC    %10011000
0F80  07                      FCC     $07
0F81  67                      FCC     $67
0F82  77                      FCC     $77
                              
0F83  42495441                FCC     "BITA"
0F87  F4                      FCC     %11110100
                              ;FCC    %10010011
0F88  85                      FCC     $85
0F89  95                      FCC     $95
0F8A  A5                      FCC     $A5
0F8B  B5                      FCC     $B5
                              
0F8C  42495442                FCC     "BITB"
0F90  F4                      FCC     %11110100
                              ;FCC    %10010011
0F91  C5                      FCC     $C5
0F92  D5                      FCC     $D5
0F93  E5                      FCC     $E5
0F94  F5                      FCC     $F5
                              
0F95  434C5241                FCC     "CLRA"
0F99  02                      FCC     %00000010                               
0F9A  4F                      FCC     $4F
                              
0F9B  434C5242                FCC     "CLRB"
0F9F  02                      FCC     %00000010                               
0FA0  5F                      FCC     $5F
                              
0FA1  434C5220                FCC     "CLR "
0FA5  74                      FCC     %01110100
                              ;FCC    %10011000
0FA6  0F                      FCC     $0F
0FA7  6F                      FCC     $6F
0FA8  7F                      FCC     $7F
                              
0FA9  434D5041                FCC     "CMPA"
0FAD  F4                      FCC     %11110100
                              ;FCC    %10010011
0FAE  81                      FCC     $81
0FAF  91                      FCC     $91
0FB0  A1                      FCC     $A1
0FB1  B1                      FCC     $B1
                              
0FB2  434D5042                FCC     "CMPB"
0FB6  F4                      FCC     %11110100
                              ;FCC    %10010011
0FB7  C1                      FCC     $C1
0FB8  D1                      FCC     $D1
0FB9  E1                      FCC     $E1
0FBA  F1                      FCC     $F1
                              
0FBB  434D5044                FCC     "CMPD"
0FBF  F8                      FCC     %11111000
                              ;FCC    %11011100
0FC0  83                      FCC     $1083
0FC1  93                      FCC     $1093
0FC2  A3                      FCC     $10A3
0FC3  B3                      FCC     $10B3
                              
0FC4  434D5053                FCC     "CMPS"
0FC8  F8                      FCC     %11111000
                              ;FCC    %11011100
0FC9  8C                      FCC     $118C
0FCA  9C                      FCC     $119C
0FCB  AC                      FCC     $11AC
0FCC  BC                      FCC     $11BC
                              
0FCD  434D5055                FCC     "CMPU"
0FD1  F8                      FCC     %11111000
                              ;FCC    %11011100
0FD2  83                      FCC     $1183
0FD3  93                      FCC     $1193
0FD4  A3                      FCC     $11A3
0FD5  B3                      FCC     $11B3
                              
0FD6  434D5058                FCC     "CMPX"
0FDA  F6                      FCC     %11110110
                              ;FCC    %10010011
0FDB  8C                      FCC     $8C
0FDC  9C                      FCC     $9C
0FDD  AC                      FCC     $AC
0FDE  BC                      FCC     $BC
                              
0FDF  434D5059                FCC     "CMPY"
0FE3  F8                      FCC     %11111000
                              ;FCC    %11011100
0FE4  8C                      FCC     $108C
0FE5  9C                      FCC     $109C
0FE6  AC                      FCC     $10AC
0FE7  BC                      FCC     $10BC
                              
0FE8  434F4D41                FCC     "COMA"
0FEC  02                      FCC     %00000010                               
0FED  43                      FCC     $43
                              
0FEE  434F4D42                FCC     "COMB"
0FF2  02                      FCC     %00000010                               
0FF3  53                      FCC     $53
                              
0FF4  434F4D20                FCC     "COM "
0FF8  74                      FCC     %01110100
                              ;FCC    %10011000
0FF9  03                      FCC     $03
0FFA  63                      FCC     $63
0FFB  73                      FCC     $73
                              
0FFC  43574149                FCC     "CWAI"
1000  84                      FCC     %10000100                               
1001  3C                      FCC     $3C
                              
1002  44414120                FCC     "DAA "
1006  02                      FCC     %00000010                               
1007  19                      FCC     $19
                              
1008  44454341                FCC     "DECA"
100C  02                      FCC     %00000010                               
100D  4A                      FCC     $4A
                              
100E  44454342                FCC     "DECB"
1012  02                      FCC     %00000010                               
1013  5A                      FCC     $5A
                              
1014  44454320                FCC     "DEC "
1018  74                      FCC     %01110100
                              ;FCC    %10011000
1019  0A                      FCC     $0A
101A  6A                      FCC     $6A
101B  7A                      FCC     $7A
                              
101C  454F5241                FCC     "EORA"
1020  F4                      FCC     %11110100
                              ;FCC    %10010011
1021  88                      FCC     $88
1022  98                      FCC     $98
1023  A8                      FCC     $A8
1024  B8                      FCC     $B8
                              
1025  454F5242                FCC     "EORB"
1029  F4                      FCC     %11110100
                              ;FCC    %10010011
102A  C1                      FCC     $C1
102B  D1                      FCC     $D1
102C  E1                      FCC     $E1
102D  F1                      FCC     $F1
                              
102E  45584720                FCC     "EXG "
1032  84                      FCC     %10000100
1033  1E                      FCC     $1E
                      
1034  494E4341                FCC     "INCA"
1038  02                      FCC     %00000010                               
1039  4C                      FCC     $4C
                              
103A  494E4342                FCC     "INCB"
103E  02                      FCC     %00000010                               
103F  5C                      FCC     $5C
                              
1040  494E4320                FCC     "INC "
1044  74                      FCC     %01110100
                              ;FCC    %10011000
1045  0C                      FCC     $0C
1046  6C                      FCC     $6C
1047  7C                      FCC     $7C
                              
1048  4A4D5020                FCC     "JMP "
104C  74                      FCC     %01110100
                              ;FCC    %10011000
104D  0E                      FCC     $0E
104E  6E                      FCC     $6E
104F  7E                      FCC     $7E
                              
1050  4A535220                FCC     "JSR "
1054  74                      FCC     %01110100
                              ;FCC    %10011000
1055  9D                      FCC     $9D
1056  AD                      FCC     $AD
1057  BD                      FCC     $BD
                              
1058  4C444120                FCC     "LDA "
105C  F4                      FCC     %11110100
                              ;FCC    %10010011
105D  86                      FCC     $86
105E  96                      FCC     $96
105F  A6                      FCC     $A6
1060  B6                      FCC     $B6
                              
1061  4C444220                FCC     "LDB "
1065  F4                      FCC     %11110100
                              ;FCC    %10010011
1066  C6                      FCC     $C6
1067  D6                      FCC     $D6
1068  E6                      FCC     $E6
1069  F6                      FCC     $F6
                              
106A  4C444420                FCC     "LDD "
106E  F6                      FCC     %11110110
                              ;FCC    %10010011
106F  CC                      FCC     $CC
1070  DC                      FCC     $DC
1071  EC                      FCC     $EC
1072  FC                      FCC     $FC
                              
1073  4C445320                FCC     "LDS "
1077  F8                      FCC     %11111000
                              ;FCC    %11011100
1078  CE                      FCC     $10CE
1079  DE                      FCC     $10DE
107A  EE                      FCC     $10EE
107B  FE                      FCC     $10FE
                              
107C  4C445520                FCC     "LDU "
1080  F6                      FCC     %11110110
                              ;FCC    %10010011
1081  CE                      FCC     $CE
1082  DE                      FCC     $DE
1083  EE                      FCC     $EE
1084  FE                      FCC     $FE
                              
1085  4C445820                FCC     "LDX "
1089  F6                      FCC     %11110110
                              ;FCC    %10010011
108A  8E                      FCC     $8E
108B  9E                      FCC     $9E
108C  AE                      FCC     $AE
108D  BE                      FCC     $BE
                              
108E  4C445920                FCC     "LDY "
1092  F8                      FCC     %11111000
                              ;FCC    %11011100
1093  8E                      FCC     $108E
1094  9E                      FCC     $109E
1095  AE                      FCC     $10AE
1096  BE                      FCC     $10BE
                              
1097  4C454153                FCC     "LEAS"
109B  24                      FCC     %00100100
109C  32                      FCC     $32
                              
109D  4C454155                FCC     "LEAU"
10A1  24                      FCC     %00100100
10A2  33                      FCC     $33
                              
10A3  4C454158                FCC     "LEAX"
10A7  24                      FCC     %00100100
10A8  30                      FCC     $30
                              
10A9  4C454159                FCC     "LEAY"
10AD  24                      FCC     %00100100
10AE  31                      FCC     $31
                              
10AF  4C534C41                FCC     "LSLA"
10B3  02                      FCC     %00000010                               
10B4  48                      FCC     $48
                              
10B5  4C534C42                FCC     "LSLB"
10B9  02                      FCC     %00000010                               
10BA  58                      FCC     $58
                              
10BB  4C534C20                FCC     "LSL "
10BF  74                      FCC     %01110100
                              ;FCC    %10011000
10C0  08                      FCC     $08
10C1  68                      FCC     $68
10C2  78                      FCC     $78
                              
10C3  4C535241                FCC     "LSRA"
10C7  02                      FCC     %00000010                               
10C8  44                      FCC     $44
                              
10C9  4C535242                FCC     "LSRB"
10CD  02                      FCC     %00000010                               
10CE  54                      FCC     $54
                              
10CF  4C535220                FCC     "LSR "
10D3  74                      FCC     %01110100
                              ;FCC    %10011000
10D4  04                      FCC     $04
10D5  64                      FCC     $64
10D6  74                      FCC     $74
                              
10D7  4D554C20                FCC     "MUL "
10DB  02                      FCC     %00000010                               
10DC  3D                      FCC     $3D
                              
10DD  4E454741                FCC     "NEGA"
10E1  02                      FCC     %00000010                               
10E2  40                      FCC     $40
                              
10E3  4E454742                FCC     "NEGB"
10E7  02                      FCC     %00000010                               
10E8  50                      FCC     $50
                              
10E9  4E454720                FCC     "NEG "
10ED  74                      FCC     %01110100
                              ;FCC    %10011000
10EE  00                      FCC     $00
10EF  60                      FCC     $60
10F0  70                      FCC     $70
                              
10F1  4E4F5020                FCC     "NOP "
10F5  02                      FCC     %00000010                               
10F6  12                      FCC     $12
                              
10F7  4F524120                FCC     "ORA "
10FB  F4                      FCC     %11110100
                              ;FCC    %10010011
10FC  8A                      FCC     $8A
10FD  9A                      FCC     $9A
10FE  AA                      FCC     $AA
10FF  BA                      FCC     $BA
                              
1100  4F524220                FCC     "ORB "
1104  F4                      FCC     %11110100
                              ;FCC    %10010011
1105  CA                      FCC     $CA
1106  DA                      FCC     $DA
1107  EA                      FCC     $EA
1108  FA                      FCC     $FA
                              
1109  4F524343                FCC     "ORCC"
110D  84                      FCC     %10000100
110E  1A                      FCC     $1A
                              
110F  50534853                FCC     "PSHS"
1113  84                      FCC     %10000100
1114  34                      FCC     $34
                              
1115  50534855                FCC     "PSHU"
1119  84                      FCC     %10000100
111A  36                      FCC     $36
                              
111B  50554C53                FCC     "PULS"
111F  84                      FCC     %10000100
1120  35                      FCC     $35
                              
1121  50554C55                FCC     "PULU"
1125  84                      FCC     %10000100
1126  37                      FCC     $37
                              
1127  524F4C41                FCC     "ROLA"
112B  02                      FCC     %00000010                               
112C  49                      FCC     $49
                              
112D  524F4C42                FCC     "ROLB"
1131  02                      FCC     %00000010                               
1132  59                      FCC     $59
                              
1133  524F4C20                FCC     "ROL "
1137  74                      FCC     %01110100
                              ;FCC    %10011000
1138  09                      FCC     $09
1139  69                      FCC     $69
113A  79                      FCC     $79
                              
113B  524F5241                FCC     "RORA"
113F  02                      FCC     %00000010                               
1140  46                      FCC     $46
                              
1141  524F5242                FCC     "RORB"
1145  02                      FCC     %00000010                               
1146  56                      FCC     $56
                              
1147  524F5220                FCC     "ROR "
114B  74                      FCC     %01110100
                              ;FCC    %10011000
114C  06                      FCC     $06
114D  66                      FCC     $66
114E  76                      FCC     $76
                              
114F  52544920                FCC     "RTI "
1153  02                      FCC     %00000010                               
1154  3B                      FCC     $3B
                              
1155  52545320                FCC     "RTS "
1159  02                      FCC     %00000010                               
115A  39                      FCC     $39
                              
115B  53424341                FCC     "SBCA"
115F  F4                      FCC     %11110100
                              ;FCC    %10010011
1160  82                      FCC     $82
1161  92                      FCC     $92
1162  A2                      FCC     $A2
1163  B2                      FCC     $B2
                              
1164  53424342                FCC     "SBCB"
1168  F4                      FCC     %11110100
                              ;FCC    %10010011
1169  C2                      FCC     $C2
116A  B2                      FCC     $B2
116B  E2                      FCC     $E2
116C  F2                      FCC     $F2
                              
116D  53455820                FCC     "SEX "
1171  02                      FCC     %00000010                               
1172  1D                      FCC     $1D
                              
1173  53544120                FCC     "STA "
1177  74                      FCC     %01110100
                              ;FCC    %10011000
1178  97                      FCC     $97
1179  A7                      FCC     $A7
117A  B7                      FCC     $B7
                              
117B  53544220                FCC     "STB "
117F  74                      FCC     %01110100
                              ;FCC    %10011000
1180  D7                      FCC     $D7
1181  E7                      FCC     $E7
1182  F7                      FCC     $F7
                              
1183  53544420                FCC     "STD "
1187  74                      FCC     %01110100
                              ;FCC    %10011000
1188  DD                      FCC     $DD
1189  ED                      FCC     $ED
118A  FD                      FCC     $FD
                              
118B  53545320                FCC     "STS "
118F  76                      FCC     %01110110
                              ;FCC    %11100000
1190  DF                      FCC     $10DF
1191  EF                      FCC     $10EF
1192  FF                      FCC     $10FF
                              
1193  53545520                FCC     "STU "
1197  74                      FCC     %01110100
                              ;FCC    %10011000
1198  DF                      FCC     $DF
1199  EF                      FCC     $EF
119A  FF                      FCC     $FF
                              
119B  53545820                FCC     "STX "
119F  74                      FCC     %01110100
                              ;FCC    %10011000
11A0  9F                      FCC     $9F
11A1  AF                      FCC     $AF
11A2  BF                      FCC     $BF
                              
11A3  53545920                FCC     "STY "
11A7  76                      FCC     %01110110
                              ;FCC    %11100000
11A8  9F                      FCC     $109F
11A9  AF                      FCC     $10AF
11AA  BF                      FCC     $10BF
                              
11AB  53554241                FCC     "SUBA"
11AF  F4                      FCC     %11110100
                              ;FCC    %10010011
11B0  80                      FCC     $80
11B1  90                      FCC     $90
11B2  A0                      FCC     $A0
11B3  B0                      FCC     $B0
                              
11B4  53554242                FCC     "SUBB"
11B8  F4                      FCC     %11110100
                              ;FCC    %10010011
11B9  C0                      FCC     $C0
11BA  D0                      FCC     $D0
11BB  E0                      FCC     $E0
11BC  F0                      FCC     $F0
                              
11BD  53554244                FCC     "SUBD"
11C1  F6                      FCC     %11110110
                              ;FCC    %10010011
11C2  83                      FCC     $83
11C3  93                      FCC     $93
11C4  A3                      FCC     $A3
11C5  B3                      FCC     $B3
                              
11C6  53574920                FCC     "SWI "
11CA  02                      FCC     %00000010
11CB  3F                      FCC     $3F
                              
11CC  53574932                FCC     "SWI2"
11D0  02                      FCC     %00000010
11D1  3F                      FCC     $103F
                              
11D2  53574933                FCC     "SWI3"
11D6  04                      FCC     %00000100                               
11D7  3F                      FCC     $113F
                              
11D8  53594E43                FCC     "SYNC"
11DC  02                      FCC     %00000010                               
11DD  13                      FCC     $13
                              
11DE  54465220                FCC     "TFR "
11E2  84                      FCC     %10000100
11E3  1F                      FCC     $1F
                              
11E4  54535441                FCC     "TSTA"
11E8  02                      FCC     %00000010                               
11E9  4D                      FCC     $4D
                              
11EA  54535442                FCC     "TSTB"
11EE  02                      FCC     %00000010                               
11EF  5D                      FCC     $5D
                              
11F0  54535420                FCC     "TST "
11F4  74                      FCC     %01110100
                              ;FCC    %10011000
11F5  0D                      FCC     $0D
11F6  6D                      FCC     $6D
11F7  7D                      FCC     $7D
                              
11F8  00                      FCB     $00     ;fin table INSTTABL
                      
                      ;table des instructions de branchement "régulieres"    
11F9  42524E          RGBRTABL        FCC     "BRN"   
11FC  21                      FCC     $21
11FD  424343                  FCC     "BCC"
1200  24                      FCC     $24
1201  424853                  FCC     "BHS"
1204  24                      FCC     $24
1205  424353                  FCC     "BCS"
1208  25                      FCC     $25
1209  424C4F                  FCC     "BLO"
120C  25                      FCC     $25
120D  42504C                  FCC     "BPL"
1210  2A                      FCC     $2A
1211  424D49                  FCC     "BMI"
1214  2B                      FCC     $2B
1215  425643                  FCC     "BVC"
1218  28                      FCC     $28
1219  425653                  FCC     "BVS"
121C  29                      FCC     $29
121D  424E45                  FCC     "BNE"
1220  26                      FCC     $26
1221  424551                  FCC     "BEQ"
1224  27                      FCC     $27
1225  424C54                  FCC     "BLT"
1228  2D                      FCC     $2D
1229  424754                  FCC     "BGT"
122C  2E                      FCC     $2E
122D  424849                  FCC     "BHI"
1230  22                      FCC     $22
1231  424745                  FCC     "BGE"
1234  2C                      FCC     $2C
1235  424C45                  FCC     "BLE"
1238  2F                      FCC     $2F
1239  424C53                  FCC     "BLS"
123C  23                      FCC     $23
123D  00                      FCC     $00
                              
                              
                      ;************************************************************************************   
                      ;routines et programmes utilitaires et applications     
                      ;************************************************************************************
                              
                      ;************************************************************************************
                      ;Routine READADC, Read Analog to Digital converter
                      ;Entrée: Aucune
                      ;Sorties: Aucune
                      ;Routines appelée:
                      ;************************************************************************************
00F4                  U_FIRQ  EQU     $00F4
1C00                  D_AD0   EQU     $1C00
1C01                  D_AD1   EQU     $1C01   
1C02                  D_AD2   EQU     $1C02   
                              
00E0                  T2      EQU     $00E0
F3E3                  DIS_BYT EQU     $F3E3
F36F                  DIS_BAC EQU     $F36F
                      
123E  4C756D696572653A2000 MESSADC0        FCC     "Lumiere: ", $00
1248  54656D7065722E3A2000 MESSADC1        FCC     "Temper.: ", $00
1252  54656E73696F6E3A2000 MESSADC2        FCC     "Tension: ", $00
                      
125C  20446567722E204300 MESSDEGC        FCC     " Degr. C", $00
1265  204B696C204C757800 MESSKLUX        FCC     " Kil Lux", $00
126E  20446320566F6C7400 MESSVOLT        FCC     " Dc Volt", $00
                      
1277  3412            READADC PSHS    A,X
                      
1279                  LOOPCONV        ;lecture entrée 0 du multiplexeur vers convertisseur A/D
1279  B71C00                  STA     D_AD0   ;début conversion
                                      
127C  8E123E                  LDX     #MESSADC0       ;message entrée adresse début
127F  17F606                  LBSR    OUTSTRNG        ;afficher message d'entrée d'adresse
                              
1282  17F050                  LBSR    WAIT10MS
                              
1285  B61C00                  LDA     D_AD0   ;lit état provenant du convertisseur
                              
1288  17F65C                  LBSR    CNVHXBCD
                              
128B  9680                    LDA     <TEMPCHAR
128D  8B30                    ADDA    #$30
128F  9780                    STA     <TEMPCHAR
                              
1291  17F594                  LBSR    OUT1CHAR
                              
1294  9681                    LDA     <TEMP2CHR
1296  8B30                    ADDA    #$30
1298  9781                    STA     <TEMP2CHR
                              
129A  9682                    LDA     <TEMP2CHR+1
129C  8B30                    ADDA    #$30
129E  9782                    STA     <TEMP2CHR+1
                              
12A0  17F58F                  LBSR    OUT2CHAR
                              
12A3  8E1265                  LDX     #MESSKLUX       ;message Klux
12A6  17F5DF                  LBSR    OUTSTRNG        ;afficher message KLux
                              
12A9  17F5AC                  LBSR    OUTCRLF
                              
                      ;lecture entrée 1 du multiplexeur vers convertisseur A/D
                              ;STA    D_AD1   ;début conversion
                                      
                              ;LDX    #MESSADC1       ;message entrée adresse début
                              ;LBSR   OUTSTRNG        ;afficher message d'entrée d'adresse
                              
                              ;LBSR   WAIT10MS
                              
                              ;LDA    D_AD1   ;lit état provenant du convertisseur
                              
                              ;SUBA   #$AF
                              
                              ;LBSR   CNVHXBCD
                              
                              ;LDA    <TEMPCHAR
                              ;ADDA   #$30
                              ;STA    <TEMPCHAR
                              
                              ;LBSR   OUT1CHAR
                              
                              ;LDA    <TEMP2CHR
                              ;ADDA   #$30
                              ;STA    <TEMP2CHR
                              
                              ;LDA    <TEMP2CHR+1
                              ;ADDA   #$30
                              ;STA    <TEMP2CHR+1
                              
                              ;LBSR   OUT2CHAR
                              
                              ;LDX    #MESSDEGC       ;message °C
                              ;LBSR   OUTSTRNG        ;afficher message °C
                              
                              ;LBSR   OUTCRLF
                              
                      ;lecture entrée 2 du multiplexeur vers convertisseur A/D
                              ;STA    D_AD2   ;début conversion
                                      
                              ;LDX    #MESSADC2       ;message entrée adresse début
                              ;LBSR   OUTSTRNG        ;afficher message d'entrée d'adresse
                              
                              ;LBSR   WAIT10MS
                              
                              ;LDA    D_AD2   ;lit état provenant du convertisseur
                              
                              ;LBSR   CNVHXBCD
                              
                              ;LDA    <TEMPCHAR
                              ;ADDA   #$30
                              ;STA    <TEMPCHAR
                              
                              ;LBSR   OUT1CHAR
                              
                              ;LDA    <TEMP2CHR
                              ;ADDA   #$30
                              ;STA    <TEMP2CHR
                              
                              ;LDA    <TEMP2CHR+1
                              ;ADDA   #$30
                              ;STA    <TEMP2CHR+1
                              
                              ;LBSR   OUT2CHAR
                              
                              ;LDX    #MESSVOLT       ;message Volt
                              ;LBSR   OUTSTRNG        ;afficher message Volt
                              
                              ;LBSR   OUTCRLF
                                      
12AC  3512                    PULS    A,X
                              
12AE  39                      RTS     
